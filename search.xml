<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>git3</title>
      <link href="/2019/08/24/git3/"/>
      <url>/2019/08/24/git3/</url>
      
        <content type="html"><![CDATA[<h1 id="分支操作"><a href="#分支操作" class="headerlink" title="分支操作"></a>分支操作</h1><h2 id="合并分支"><a href="#合并分支" class="headerlink" title="合并分支"></a>合并分支</h2><ol><li>切换到要修改的分支（被合并，增加新内容）上    git checkout[老内容分支]</li><li>执行merge命令    git merge[新内容分支]</li></ol><h3 id="产生冲突"><a href="#产生冲突" class="headerlink" title="产生冲突"></a>产生冲突</h3><ul><li>打开冲突文件，head到等号是当前分支内容，等号到新内容分支名为冲突修改内容</li><li>解决步骤<ul><li>删除不想要的内容</li><li>git add 文件名</li><li>git commit -m “修改内容” 注意这里现在不能加文件名否则会报错</li></ul></li></ul><h1 id="哈希"><a href="#哈希" class="headerlink" title="哈希"></a>哈希</h1><ul><li>一种加密算法<ul><li>将明文转换为密文</li></ul></li></ul><h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><ul><li>不管输入数据的数据量有多大，输入同一个哈希算法，得到的加密结果长度固定</li><li>哈希算法确定，输入数据确定，输出数据也是确定的</li><li>哈希算法确定，输入数据有变化，输出数据一定有变化而且可能有很大的变化</li><li>哈希算法不可逆</li></ul><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><ul><li>MD5</li><li>SHA1（字母不区分大小写，应该是代表十六进制数）</li><li>CRC32</li></ul><h2 id="与git关联"><a href="#与git关联" class="headerlink" title="与git关联"></a>与git关联</h2><ul><li>Git底层采取SHA-1 算法</li><li>哈希算法可以用来校验文件是否修改</li></ul><h1 id="git-与-svn-区别"><a href="#git-与-svn-区别" class="headerlink" title="git 与 svn 区别"></a>git 与 svn 区别</h1><ul><li>svn为集中式管理，每次保留修改部分，不存在修改部分</li><li>git 把数据看做是小型文件系统的快照，每次提交更新都会对全部文件制作一个快照保存快照索引，如果文件没有修改git不再重新储存，只保留指针指向之前文件<ul><li>提交对象及其父对象形成链表</li></ul></li><li>git的快照<ul><li>自身哈希</li><li>commit</li><li>tree</li><li>parent</li><li>author</li><li>commiter</li></ul></li></ul><h1 id="git-如何管理分支"><a href="#git-如何管理分支" class="headerlink" title="git 如何管理分支"></a>git 如何管理分支</h1><ul><li>类似链表结构</li><li>首个版本为root</li><li>开始HEAD指针指向master指针</li><li>若有新的分支则新建一个新的指针</li><li>切换分支只是改变HEAD指针位置</li></ul><h1 id="github"><a href="#github" class="headerlink" title="github"></a>github</h1><ul><li>创建账号</li><li>创建仓库</li><li>仓库网址保存<ul><li>git remote origin(保存的仓库网址) 网址（url）将仓库网址起别名</li><li>git remote -v 查看当前所有的网址别名</li></ul></li><li>将新成员加入项目，点击setting，选择Collaborators，填写新成员github账号发送邀请，新成员接收到邀请后点击接受，新成员就可push内容到远端库了</li></ul><h1 id="推送"><a href="#推送" class="headerlink" title="推送"></a>推送</h1><ul><li>git push 网址 本地库提交分支<ul><li>第一次可能遇到https问题。需要删掉https试一次，在加上https试一次，然后就可以用啦</li><li>目的是将本地库推送到远程库</li></ul></li><li>新成员不能将本地库内容推送到远程库</li></ul><h1 id="克隆"><a href="#克隆" class="headerlink" title="克隆"></a>克隆</h1><ul><li>git clone 网址<ul><li>会完整的把远程库克隆到当前文件夹下的仓库名文件夹</li><li>创建远程库的地址别名</li><li>初始化本地库</li></ul></li><li>新成员可以克隆内容到本地库，可以在本地库进行修改，但是不能上传到远程库</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>essay_tests-civil_service_examination</title>
      <link href="/2019/08/22/essay-tests-civil-service-examination/"/>
      <url>/2019/08/22/essay-tests-civil-service-examination/</url>
      
        <content type="html"><![CDATA[<h1 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h1><h2 id="是什么"><a href="#是什么" class="headerlink" title="是什么"></a>是什么</h2><ul><li>申论是文字和逻辑分析<ul><li>材料内容</li><li>梳理逻辑</li></ul></li></ul><h2 id="考什么"><a href="#考什么" class="headerlink" title="考什么"></a>考什么</h2><ul><li>注意事项</li><li>给定材料</li><li>作答要求</li></ul><h2 id="大纲分析"><a href="#大纲分析" class="headerlink" title="大纲分析"></a>大纲分析</h2><ul><li>阅读理解能力<ul><li>把握材料，理解信息，提取事实观点</li><li>材料中抄答案，原词</li><li>注意字数范围</li><li>揭示本质问题</li></ul></li><li>综合分析能力<ul><li>以材料为基础</li><li>分析归纳<ul><li>词汇替换为规范表述</li></ul></li><li>推断评价<ul><li>分析深层意思</li><li>材料中会提到这里可以分析，不要擅自扩展</li></ul></li></ul></li><li>提出和解决问题的能力<ul><li>材料中发现和界定问题</li><li>提出解决方案或措施 </li></ul></li><li>文字表达能力<ul><li>说明陈述议论</li><li>准确规范<ul><li>理解材料内容</li><li>不能口语化</li></ul></li><li>简明畅达<ul><li>去掉不必要表述</li><li>去掉不影响表意的形容词</li><li>表达通顺</li></ul></li></ul></li></ul><h2 id="基本要素"><a href="#基本要素" class="headerlink" title="基本要素"></a>基本要素</h2><h3 id="要素"><a href="#要素" class="headerlink" title="要素"></a>要素</h3><ul><li>问题、原因、意义、危害、对策</li></ul><h3 id="题型"><a href="#题型" class="headerlink" title="题型"></a>题型</h3><ul><li><p>环境面临主要问题就找负面信息</p></li><li><p>引发热议的主要原因就找原因</p></li><li><p>意义就找好结果</p></li><li><p>举措就找做法<br>以上的问题、原因、意义、举措，这样的提问是单一题，按点赋分，按题赋分</p></li><li><p>对人口诅咒做全面解释<br>没用明确，就全面写出来，按点赋分，按逻辑赋分</p></li><li><p>写一篇倡议书，公文题<br>格式正确，语言恰当，表述得体，层次清楚</p></li><li><p>文章写作</p><ol><li>自选角度，见解深刻，</li><li>参考材料，但不拘泥于材料，</li><li>思路清晰，语言流畅，</li><li>字数较多</li><li>文体为议论文</li><li>文体来源与材料，要高于材料</li></ol></li></ul><h2 id="答题步骤"><a href="#答题步骤" class="headerlink" title="答题步骤"></a>答题步骤</h2><h3 id="全面审题"><a href="#全面审题" class="headerlink" title="全面审题"></a>全面审题</h3><ul><li>审作答范围<ul><li>根据依据加范围来判断范围</li><li>主题判断文章范围</li></ul></li><li>作答主题与结构<ul><li>要素是否有信息</li><li>是否与主题有关</li><li>答题结构<ul><li>特殊结构</li><li>主题结构</li><li>不同要素形式分开标注，列出数字分别的要点</li></ul></li></ul></li><li>作答要求<ul><li>准确：要求来源于材料，优先原词原句，不规范的词句尊重原意补充</li><li>全面：宁滥勿缺，保证无遗漏，不会倒扣分，一般所有题都要求。但要注意字数</li><li>简明：表述言简意赅，突出关键词，去掉修饰语，避免同义反复</li><li>有条理：分条撰写，要标序号，尽量兼顾内容逻辑，不必强行分类</li><li>层次分明：建议分类</li></ul></li></ul><h3 id="资料阅读"><a href="#资料阅读" class="headerlink" title="资料阅读"></a>资料阅读</h3><ul><li>目标导向</li></ul><h4 id="技巧"><a href="#技巧" class="headerlink" title="技巧"></a>技巧</h4><ul><li>摘抄<ul><li>主题相关信息</li><li>摘抄常见位置<ul><li>自然段的首尾句</li><li>观点句（权威，媒体，群众（需要归纳概括））</li><li>关联词句（细节）<ul><li>表转折：虽然但是，却，然而。必有重点</li><li>表并列：既又，一方面另一方面，和，多个可摘抄</li><li>表因果：因为所以，之所以是因为，由于因此，注意题目问原因还是结果</li><li>表递进：不光也，不仅还，不但而且。强调后者的并列句</li></ul></li><li>标点符号<ul><li>分号    多个点</li><li>引号    专有名词</li><li>顿号     密集词群</li><li>破折号 专有名词</li><li>问号    设问后方重点，反问强调</li></ul></li></ul></li></ul></li><li>归纳概括<ul><li>不规范语言概括为规范语言</li><li>无总结性话语</li><li>示例类资料</li><li>数据型资料<ul><li>大小</li><li>趋势</li><li>比重</li></ul></li></ul></li><li>分析推导<ul><li>建议型表达可以推导出问题</li></ul></li></ul><h3 id="答案组织"><a href="#答案组织" class="headerlink" title="答案组织"></a>答案组织</h3><ul><li>技巧<ul><li>加序号</li><li>分类整理<ul><li>资料自然段分类</li><li>表述逻辑和小主题</li><li>分类关键词：归纳，分类，分别，哪些方面，层次分明，逻辑清晰等表述</li><li>提炼总括词放在开头（加分项，但是不一定要求）</li></ul></li></ul></li></ul><h1 id="做题技巧总结"><a href="#做题技巧总结" class="headerlink" title="做题技巧总结"></a>做题技巧总结</h1><ul><li>关注材料逻辑：理清关系，抓大放小。</li><li>总分结构、重复性内容需关注</li><li>目标是做法的总括</li><li>同义表达，字数不允许去掉一个</li><li>字数有限优先抄写总括信息</li></ul><hr><h1 id="题型精讲"><a href="#题型精讲" class="headerlink" title="题型精讲"></a>题型精讲</h1><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><ul><li>常见命题方式<ul><li>问题、不足、困境、瓶颈、挑战、难点等</li></ul></li><li>答题技巧<ul><li>紧扣主题</li><li>负面标志性词汇：不科学、不合理、不到位、不均衡、不完善、不健全、不足、缺乏、缺少、流失、少、低、差、弱、陈旧、单一</li><li>将提取的总括词前置，后加问题词汇形成并列句式</li><li>不要抄题干，直接罗列答案</li><li>拿不准多写主题相关负面信息</li></ul></li><li>分析推理<ul><li>建议型表述，回答问题。但是建议不一定是没有注意表述词</li><li>对比型表述，过去现在对比，中外对比，也会反映问题</li><li>民众讨论，自下而上，，可总结为社会舆论</li><li>报纸等可以总结为媒体导向，媒体舆论</li><li>明确要素总结</li></ul></li></ul><h2 id="影响"><a href="#影响" class="headerlink" title="影响"></a>影响</h2><ul><li><p>常见问法</p><ul><li>正面：意义，效果，成果，积极作用等</li><li>负面：危害，后果等<h3 id="答题技巧"><a href="#答题技巧" class="headerlink" title="答题技巧"></a>答题技巧</h3></li></ul></li><li><p>关键词</p><ul><li>正面： 激发、 促进、实现、提升、倒逼……；有利于、有助于、感动着、推动了、巩固了……</li><li>负面：引发、导致、造成、危及、损害……；消解着、割裂着、破坏了、妨碍了、阻碍了、致使……</li></ul></li><li><p>问题推导影响（积极影响）</p><ul><li>材料中想通过某项举措去解决问题，或者问题已经被措施解决了，可以将问题推导为意义。    </li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> other, essay_tests, civil_servcie_examination </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LandPlanningAndSiteDesign</title>
      <link href="/2019/08/22/LandPlanningAndSiteDesign/"/>
      <url>/2019/08/22/LandPlanningAndSiteDesign/</url>
      
        <content type="html"><![CDATA[<p>/p搜索当前阅览页</p><h1 id="过程与工具"><a href="#过程与工具" class="headerlink" title="过程与工具"></a>过程与工具</h1><h2 id="建筑环境的塑造"><a href="#建筑环境的塑造" class="headerlink" title="建筑环境的塑造"></a>建筑环境的塑造</h2><hr><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><ul><li>人类改造着环境，但也造成了一些环境破坏，对人类的生存环境造成了深远的影响</li><li>这已变成了共识</li><li>需要想办法避免或至少减轻破坏</li></ul><h3 id="构建可持续的建筑环境"><a href="#构建可持续的建筑环境" class="headerlink" title="构建可持续的建筑环境"></a>构建可持续的建筑环境</h3><ul><li>社区可持续发展<ul><li>减少对自然的破坏，了解发展制约和环境承载能力</li><li>尊重生物多样性</li><li>使用可再生能源，循环使用原料</li><li>兼顾地区间不相互破坏，时空上不牺牲后代利益</li><li>文化多样性</li><li>需在决策上对生态进行保护</li><li>政策制定平衡开放灵活，多角度考虑社区建设</li><li>可持续的教育理念，社区共同价值观的培养，充分利用劳动力资源</li></ul></li><li>社区自然和文化资源的合理利用</li><li>社区的合理规划<ul><li>可持续发展部门<ul><li>资源利用可再生</li><li>减固废</li><li>防污染</li></ul></li><li>精明增长的规划目标<ul><li>地方特色</li><li>保护环境区域</li><li>引导社区合理发展</li><li>土地混合使用</li><li>鼓励密集型建筑设计</li><li>增加住房机会和选择</li><li>步行社区</li><li>多样化交通</li></ul></li><li>精明增长的进程目标<ul><li>可预测，公平低成本</li><li>鼓励相关合作</li></ul></li></ul></li><li>可持续性场地设计<ul><li>考虑土地承载</li><li>开发力度</li><li>必要投入</li><li>负面最小化<h3 id="场地及场地设计的重要性"><a href="#场地及场地设计的重要性" class="headerlink" title="场地及场地设计的重要性"></a>场地及场地设计的重要性</h3>P12</li></ul></li></ul><h3 id="场地规划过程"><a href="#场地规划过程" class="headerlink" title="场地规划过程"></a>场地规划过程</h3><h3 id="知识、技能和价值观"><a href="#知识、技能和价值观" class="headerlink" title="知识、技能和价值观"></a>知识、技能和价值观</h3><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><hr><h2 id="空间信息可视化"><a href="#空间信息可视化" class="headerlink" title="空间信息可视化"></a>空间信息可视化</h2><hr><h3 id="概述-1"><a href="#概述-1" class="headerlink" title="概述"></a>概述</h3><h3 id="图形传达学"><a href="#图形传达学" class="headerlink" title="图形传达学"></a>图形传达学</h3><h3 id="制图基础"><a href="#制图基础" class="headerlink" title="制图基础"></a>制图基础</h3><h3 id="有效的平面传播原则"><a href="#有效的平面传播原则" class="headerlink" title="有效的平面传播原则"></a>有效的平面传播原则</h3><h3 id="基本地图"><a href="#基本地图" class="headerlink" title="基本地图"></a>基本地图</h3><h3 id="地理信息系统（GIS）"><a href="#地理信息系统（GIS）" class="headerlink" title="地理信息系统（GIS）"></a>地理信息系统（GIS）</h3><h3 id="本章小结"><a href="#本章小结" class="headerlink" title="本章小结"></a>本章小结</h3><hr><hr><h1 id="场地选择与项目规划"><a href="#场地选择与项目规划" class="headerlink" title="场地选择与项目规划"></a>场地选择与项目规划</h1><h2 id="场地选择"><a href="#场地选择" class="headerlink" title="场地选择"></a>场地选择</h2><hr><h3 id="概述-2"><a href="#概述-2" class="headerlink" title="概述"></a>概述</h3><h3 id="场地选择范围"><a href="#场地选择范围" class="headerlink" title="场地选择范围"></a>场地选择范围</h3><h3 id="场地选择进程"><a href="#场地选择进程" class="headerlink" title="场地选择进程"></a>场地选择进程</h3><h3 id="小结-1"><a href="#小结-1" class="headerlink" title="小结"></a>小结</h3><hr><h2 id="项目规划"><a href="#项目规划" class="headerlink" title="项目规划"></a>项目规划</h2><hr><h3 id="概述-3"><a href="#概述-3" class="headerlink" title="概述"></a>概述</h3><h3 id="规划方法"><a href="#规划方法" class="headerlink" title="规划方法"></a>规划方法</h3><h3 id="方案档案"><a href="#方案档案" class="headerlink" title="方案档案"></a>方案档案</h3><h3 id="小结-2"><a href="#小结-2" class="headerlink" title="小结"></a>小结</h3><hr><hr><h1 id="场地清单与数据分析"><a href="#场地清单与数据分析" class="headerlink" title="场地清单与数据分析"></a>场地清单与数据分析</h1><h2 id="场地调查：物理属性"><a href="#场地调查：物理属性" class="headerlink" title="场地调查：物理属性"></a>场地调查：物理属性</h2><hr><h3 id="概述-4"><a href="#概述-4" class="headerlink" title="概述"></a>概述</h3><h3 id="场地规模和平面形状"><a href="#场地规模和平面形状" class="headerlink" title="场地规模和平面形状"></a>场地规模和平面形状</h3><h3 id="地形"><a href="#地形" class="headerlink" title="地形"></a>地形</h3><h3 id="地质"><a href="#地质" class="headerlink" title="地质"></a>地质</h3><h3 id="水文"><a href="#水文" class="headerlink" title="水文"></a>水文</h3><h3 id="土壤"><a href="#土壤" class="headerlink" title="土壤"></a>土壤</h3><h3 id="气候"><a href="#气候" class="headerlink" title="气候"></a>气候</h3><h3 id="自然灾害"><a href="#自然灾害" class="headerlink" title="自然灾害"></a>自然灾害</h3><h3 id="小结-3"><a href="#小结-3" class="headerlink" title="小结"></a>小结</h3><hr><h2 id="场地清单：生物属性"><a href="#场地清单：生物属性" class="headerlink" title="场地清单：生物属性"></a>场地清单：生物属性</h2><h3 id="概述-5"><a href="#概述-5" class="headerlink" title="概述"></a>概述</h3><h3 id="生态群落"><a href="#生态群落" class="headerlink" title="生态群落"></a>生态群落</h3><h3 id="树木"><a href="#树木" class="headerlink" title="树木"></a>树木</h3><h3 id="野生动物"><a href="#野生动物" class="headerlink" title="野生动物"></a>野生动物</h3><h3 id="小结-4"><a href="#小结-4" class="headerlink" title="小结"></a>小结</h3><hr><h2 id="场地清单：人文属性"><a href="#场地清单：人文属性" class="headerlink" title="场地清单：人文属性"></a>场地清单：人文属性</h2><h3 id="概述-6"><a href="#概述-6" class="headerlink" title="概述"></a>概述</h3><h3 id="土地使用权"><a href="#土地使用权" class="headerlink" title="土地使用权"></a>土地使用权</h3><h3 id="土地使用管理"><a href="#土地使用管理" class="headerlink" title="土地使用管理"></a>土地使用管理</h3><h3 id="财产价值"><a href="#财产价值" class="headerlink" title="财产价值"></a>财产价值</h3><h3 id="公共基础设施"><a href="#公共基础设施" class="headerlink" title="公共基础设施"></a>公共基础设施</h3><h3 id="建筑和邻里建筑风格"><a href="#建筑和邻里建筑风格" class="headerlink" title="建筑和邻里建筑风格"></a>建筑和邻里建筑风格</h3><h3 id="历史资源"><a href="#历史资源" class="headerlink" title="历史资源"></a>历史资源</h3><h3 id="感官和知觉"><a href="#感官和知觉" class="headerlink" title="感官和知觉"></a>感官和知觉</h3><h3 id="本章小结-1"><a href="#本章小结-1" class="headerlink" title="本章小结"></a>本章小结</h3><hr><h2 id="场地分析：集成与整合"><a href="#场地分析：集成与整合" class="headerlink" title="场地分析：集成与整合"></a>场地分析：集成与整合</h2><h3 id="概述-7"><a href="#概述-7" class="headerlink" title="概述"></a>概述</h3><h3 id="场地承载例"><a href="#场地承载例" class="headerlink" title="场地承载例"></a>场地承载例</h3><h3 id="适宜性分析"><a href="#适宜性分析" class="headerlink" title="适宜性分析"></a>适宜性分析</h3><h3 id="集成与整合"><a href="#集成与整合" class="headerlink" title="集成与整合"></a>集成与整合</h3><h3 id="小结-5"><a href="#小结-5" class="headerlink" title="小结"></a>小结</h3><hr><hr><h1 id="项目设计与实践"><a href="#项目设计与实践" class="headerlink" title="项目设计与实践"></a>项目设计与实践</h1><h2 id="概念设计"><a href="#概念设计" class="headerlink" title="概念设计"></a>概念设计</h2><h3 id="概述-8"><a href="#概述-8" class="headerlink" title="概述"></a>概述</h3><h3 id="特殊场地环境设计"><a href="#特殊场地环境设计" class="headerlink" title="特殊场地环境设计"></a>特殊场地环境设计</h3><h3 id="设计决定因素"><a href="#设计决定因素" class="headerlink" title="设计决定因素"></a>设计决定因素</h3><h3 id="创造力和概念设计"><a href="#创造力和概念设计" class="headerlink" title="创造力和概念设计"></a>创造力和概念设计</h3><h3 id="概念设计过程"><a href="#概念设计过程" class="headerlink" title="概念设计过程"></a>概念设计过程</h3><h3 id="概念设计剖析"><a href="#概念设计剖析" class="headerlink" title="概念设计剖析"></a>概念设计剖析</h3><h3 id="概念设计制图"><a href="#概念设计制图" class="headerlink" title="概念设计制图"></a>概念设计制图</h3><h3 id="概念评估和提炼"><a href="#概念评估和提炼" class="headerlink" title="概念评估和提炼"></a>概念评估和提炼</h3><h3 id="小结-6"><a href="#小结-6" class="headerlink" title="小结"></a>小结</h3><hr><h2 id="设计开发"><a href="#设计开发" class="headerlink" title="设计开发"></a>设计开发</h2><h3 id="概述-9"><a href="#概述-9" class="headerlink" title="概述"></a>概述</h3><h3 id="可持续和宜居"><a href="#可持续和宜居" class="headerlink" title="可持续和宜居"></a>可持续和宜居</h3><h3 id="设计理论"><a href="#设计理论" class="headerlink" title="设计理论"></a>设计理论</h3><h3 id="开放空间"><a href="#开放空间" class="headerlink" title="开放空间"></a>开放空间</h3><h3 id="交通系统"><a href="#交通系统" class="headerlink" title="交通系统"></a>交通系统</h3><h3 id="建筑"><a href="#建筑" class="headerlink" title="建筑"></a>建筑</h3><h3 id="小结-7"><a href="#小结-7" class="headerlink" title="小结"></a>小结</h3><hr><h2 id="项目实践"><a href="#项目实践" class="headerlink" title="项目实践"></a>项目实践</h2><h3 id="概述-10"><a href="#概述-10" class="headerlink" title="概述"></a>概述</h3><h3 id="设计质量"><a href="#设计质量" class="headerlink" title="设计质量"></a>设计质量</h3><h3 id="施工档案"><a href="#施工档案" class="headerlink" title="施工档案"></a>施工档案</h3><h3 id="合同管理"><a href="#合同管理" class="headerlink" title="合同管理"></a>合同管理</h3><h3 id="批准和许可"><a href="#批准和许可" class="headerlink" title="批准和许可"></a>批准和许可</h3><h3 id="小结-8"><a href="#小结-8" class="headerlink" title="小结"></a>小结</h3><hr>]]></content>
      
      
      
        <tags>
            
            <tag> other, LandPlanning, catalogue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>wirelessproblem</title>
      <link href="/2019/08/21/wirelessproblem/"/>
      <url>/2019/08/21/wirelessproblem/</url>
      
        <content type="html"><![CDATA[<h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>打开电脑发现无法联无线网，使用以下命令检查：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig -a</span><br></pre></td></tr></table></figure><ol><li>发现两个接口：eno1和lo,并没有发现无线网卡</li><li>退出Ubuntu系统，进入win10依旧未发现无线网卡，怀疑无线网卡损坏。</li><li>外出购买内置无线网卡rtl8723be<ul><li>安装后win10系统默认关闭wifi，睡眠后开启wifi接口可打开，重启后又关闭。尝试用笔记本默认硬件开关F12和fn+ F12，只能切换飞行模式和wifi，但是wifi仍处于关闭状态</li><li>Ubuntu系统处于飞行模式并且显示wifi硬件开关关闭。尝试笔记本默认wifi硬件开关，按键无效或终端输入~符号。</li></ul></li><li>ubuntu系统下尝试下列命令解决问题<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rfkill list</span><br></pre></td></tr></table></figure></li></ol><p>显示 soft blocked no<br>hard blocked yes<br>说明硬件开关阻塞</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rfkill unblock all</span><br><span class="line">rfkill list</span><br></pre></td></tr></table></figure><p>未造成任何改变，此方法仅适合与开关软件阻塞<br>尝试挂起系统解决问题</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pm-suspend</span><br></pre></td></tr></table></figure><p>找不到pm命令，连接网线，通过有线网络下载pm</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install pm</span><br></pre></td></tr></table></figure><p>断开有线网络</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pm-suspend</span><br></pre></td></tr></table></figure><p>回车唤起系统，发现wifi正常使用。<br>但是每次开机后挂起很麻烦，所以寻找其他解决办法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo modprobe -r rtl8723be</span><br><span class="line">sudo modprobe rtl8723be</span><br></pre></td></tr></table></figure><p>尝试开闭模块重新激活，失败</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/modprobe.d/blacklist.conf</span><br><span class="line">最后增加</span><br><span class="line">blacklist hp-wmi</span><br><span class="line">....</span><br><span class="line">等一系列网上方法</span><br></pre></td></tr></table></figure><p>失败，重启后问题仍无法解决</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">github上更新rtl系列网卡驱动</span><br><span class="line">依照README提示安装相关的kernel部件</span><br><span class="line">git clone ....</span><br><span class="line">cd 克隆的文件夹</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line">sudo modprobe -r rtl8723be</span><br><span class="line">sudo modprobe rtl8723be</span><br><span class="line">sudo vim /etc/modprobe.d/rtl8723be.conf</span><br><span class="line">依照网上配置</span><br></pre></td></tr></table></figure><p>原来可以链接的wifi显示连接失败，需要激活<br>重启后问题未得到解决</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">进入clone的文件夹</span><br><span class="line">sudo make uninstall</span><br></pre></td></tr></table></figure><p>卸载后重启可以通过挂起联网</p><hr><h1 id="问题解决方案"><a href="#问题解决方案" class="headerlink" title="问题解决方案"></a>问题解决方案</h1><ul><li>只有通过挂起解决</li><li>熟悉特别linux系统前不打算再尝试解决这个问题</li><li>已购买原相同无线内置网卡尝试解决问题</li><li>下次ubuntu系统不要使用rtl（瑞昱系列的网卡）</li><li>熟悉使用以下linux命令<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">sudo pm-suspend 系统挂起</span><br><span class="line">rfkill list无线设备列表</span><br><span class="line">rfkill unblock all不阻塞所有</span><br><span class="line">rfkill block all阻塞所有</span><br><span class="line">ifconfig -a查看所有端口</span><br><span class="line">sudo lshw -C Network查看无线设备</span><br><span class="line">sudo lsmod查看在用模块</span><br><span class="line">sudo modprobe 修改在用模块</span><br><span class="line">makemake installmake uninstall编译式的安装和卸载</span><br><span class="line">git clone 的使用</span><br><span class="line"></span><br><span class="line">/etc/modprobe.d/下的文件的修改</span><br><span class="line">blacklist.conf用于增加黑名单模块，防止开机启动</span><br></pre></td></tr></table></figure></li></ul><hr><h1 id="仍存在问题"><a href="#仍存在问题" class="headerlink" title="仍存在问题"></a>仍存在问题</h1><ul><li>不能直接开启</li><li>挂起后不稳定，一定时间后掉线</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> wifi, hard_block,airplane_mode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git2</title>
      <link href="/2019/08/19/git2/"/>
      <url>/2019/08/19/git2/</url>
      
        <content type="html"><![CDATA[<h1 id="命令介绍"><a href="#命令介绍" class="headerlink" title="命令介绍"></a>命令介绍</h1><h2 id="git-status"><a href="#git-status" class="headerlink" title="git status"></a>git status</h2><ul><li>用于查看仓库中的文件状态<ul><li>在哪个分支</li><li>是否有提交</li><li>是否有新的文件，是否有追踪过这个文件，是否更改过</li></ul></li><li>查看工作区和缓存区内容</li></ul><h2 id="git-add-文件名"><a href="#git-add-文件名" class="headerlink" title="git add 文件名"></a>git add 文件名</h2><ul><li>用于追踪文件</li><li>用于将工作区的内容提交到暂存区</li></ul><h2 id="git-commit-文件名"><a href="#git-commit-文件名" class="headerlink" title="git commit 文件名"></a>git commit 文件名</h2><ul><li>用于提交文件</li><li>-a 用于modified文件的提交</li><li>-m “”   引号内写下修改内容，避免打开vim编辑器添加</li><li>将暂存区内容传到本地库</li></ul><h2 id="git-log"><a href="#git-log" class="headerlink" title="git log"></a>git log</h2><ul><li>查看历史版本</li><li>–pretty=oneline    以简洁的方式显示</li><li>–oneline    以最简单方式显示只显示head指针的过去版本，而不显示head指向的新版本</li><li>多屏显示类似linux中的less显示</li></ul><h2 id="git-relog"><a href="#git-relog" class="headerlink" title="git relog"></a>git relog</h2><ul><li>显示head指针需要移动多少步才能达到想要的版本</li></ul><h2 id="git-reset-–hard-哈希索引值"><a href="#git-reset-–hard-哈希索引值" class="headerlink" title="git reset –hard 哈希索引值"></a>git reset –hard 哈希索引值</h2><ul><li>选择你想要到的版本</li></ul><h2 id="git-reset-–hard-HEAD"><a href="#git-reset-–hard-HEAD" class="headerlink" title="git reset –hard HEAD^"></a>git reset –hard HEAD^</h2><ul><li>回退到之前版本，取决于^的数，数量表示回退补数（不建议多步）</li></ul><h2 id="git-reset-–hard-HEAD-步数"><a href="#git-reset-–hard-HEAD-步数" class="headerlink" title="git reset –hard HEAD~步数"></a>git reset –hard HEAD~步数</h2><ul><li>显示你要后退的版本步数</li></ul><h2 id="git-help-reset"><a href="#git-help-reset" class="headerlink" title="git help reset"></a>git help reset</h2><ul><li>reset 的帮助</li></ul><h2 id="git-reset"><a href="#git-reset" class="headerlink" title="git reset"></a>git reset</h2><ul><li>–soft    仅仅在本地库移动HEAD指针</li><li>–mixed    <ul><li>在本地库移动HEAD指针</li><li>重置暂存区</li></ul></li><li>–hard    <ul><li>在本地库移动HEAD指针</li><li>重置暂存区</li><li>重置工作区</li></ul></li><li>找回文件的一种方式，回退到之前的版本，把之前版本的文件恢复，不过前提必须在文件存在时的状态提交到了本地库</li></ul><h2 id="git-diff-文件名"><a href="#git-diff-文件名" class="headerlink" title="git diff 文件名"></a>git diff 文件名</h2><ul><li>将工作区文件与暂存区文件进行比较</li><li>红色表示删除过</li><li>前面有加号表示添加的内容</li></ul><h2 id="git-diff-【本地库中的历史版本】【文件名】"><a href="#git-diff-【本地库中的历史版本】【文件名】" class="headerlink" title="git diff 【本地库中的历史版本】【文件名】"></a>git diff 【本地库中的历史版本】【文件名】</h2><ul><li>将工作区中的文件和本地库历史记录进行比较</li><li>不带文件名比较多个文件</li></ul><hr><h1 id="本地的仓库分类"><a href="#本地的仓库分类" class="headerlink" title="本地的仓库分类"></a>本地的仓库分类</h1><h2 id="本地库"><a href="#本地库" class="headerlink" title="本地库"></a>本地库</h2><ul><li>历史版本<ul><li>通过head指针指示当前处于的版本</li></ul></li></ul><h2 id="暂存区"><a href="#暂存区" class="headerlink" title="暂存区"></a>暂存区</h2><ul><li>临时存储</li></ul><h2 id="工作区"><a href="#工作区" class="headerlink" title="工作区"></a>工作区</h2><ul><li>写代码</li></ul><hr><h1 id="git的分支"><a href="#git的分支" class="headerlink" title="git的分支"></a>git的分支</h1><ul><li>从多个分支对一个项目进行开发</li></ul><h2 id="master"><a href="#master" class="headerlink" title="master"></a>master</h2><ul><li>主要分支</li></ul><h2 id="feature"><a href="#feature" class="headerlink" title="feature_***"></a>feature_***</h2><ul><li>刚开始内容和master一样</li><li>之后的内容是独立的分支，在合并之前不会对master和其他分支有影响</li><li>作为一个独立的功能进行开发</li></ul><h2 id="hot-fix分支"><a href="#hot-fix分支" class="headerlink" title="hot_fix分支"></a>hot_fix分支</h2><ul><li>用于修复bug</li></ul><h2 id="git-branch-v"><a href="#git-branch-v" class="headerlink" title="git branch -v"></a>git branch -v</h2><ul><li>查看现有分支</li></ul><h2 id="git-branch-分支名"><a href="#git-branch-分支名" class="headerlink" title="git branch 分支名"></a>git branch 分支名</h2><ul><li>新建分支</li><li>一般以feature_***形式命名</li><li>修复bug分支一般以hot_fix命名 </li></ul><h2 id="git-checkout-分支名"><a href="#git-checkout-分支名" class="headerlink" title="git checkout 分支名"></a>git checkout 分支名</h2><ul><li>用于切换分支</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>datastructure1</title>
      <link href="/2019/08/18/datastructure1/"/>
      <url>/2019/08/18/datastructure1/</url>
      
        <content type="html"><![CDATA[<h1 id="abstract"><a href="#abstract" class="headerlink" title="abstract"></a>abstract</h1><h2 id="优缺点"><a href="#优缺点" class="headerlink" title="优缺点"></a>优缺点</h2><table><thead><tr><th>数据结构</th><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td>数组</td><td>插入快，如果知道下标可以非常快的存取</td><td>查找慢，删除慢，大小固定</td></tr><tr><td>有序数组</td><td>比无序数组查找快</td><td>删除和插入慢，大小固定</td></tr><tr><td>栈</td><td>提供后进先出方式的存取</td><td>存取其他项很慢</td></tr><tr><td>队列</td><td>提供先进先出方式存取</td><td>存取其他项很慢</td></tr><tr><td>链表</td><td>插入快，删除快</td><td>查找慢</td></tr><tr><td>二叉树</td><td>查找、插入、删除都快（如果树平衡}</td><td>删除算法复杂</td></tr><tr><td>红黑树</td><td>查找、插入、删除都快。树总是平衡</td><td>算法复杂</td></tr><tr><td>2-3-4数</td><td>查找、插入、删除都快。树总是平衡，类似的树对磁盘存储有用</td><td>算法复杂</td></tr><tr><td>哈希表</td><td>如果关键字已知则存取极快，插入快</td><td>删除慢，如果不知道关键字则存取很慢，对存储空间使用不充分</td></tr><tr><td>堆</td><td>插入，删除快，对大量数据项的存取很快</td><td>对其他数据项存取慢</td></tr><tr><td>图</td><td>对现实世界建模</td><td>有些算法很复杂</td></tr></tbody></table><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><ul><li>数据结构除了数组外都可以被认为是抽象数据结构（ADT）</li><li>常用操作<ul><li>插入</li><li>寻找数据项</li><li>删除</li></ul></li></ul><h1 id="软件工程简述"><a href="#软件工程简述" class="headerlink" title="软件工程简述"></a>软件工程简述</h1><ul><li>软件生命周期<ul><li>分析</li><li>设计</li><li>验证</li><li>编码</li><li>测试</li><li>生产</li><li>维护</li></ul></li></ul><h1 id="C与Java的区别"><a href="#C与Java的区别" class="headerlink" title="C与Java的区别"></a>C与Java的区别</h1><ul><li>Java无指针</li><li>Java有内存回收机制</li><li>Java输出不用预处理，System.out.println可以直接用。print 和println的区别在于是否换行</li><li>Java中判断类是否是同一个通过==的方法来判断，而判断类的属性是否一致通过equals进行判断</li><li>调用java.io.*需要为所有的输入方法加上throws IOException<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">//java输入字符</span><br><span class="line">public static char getChar() throws IOException</span><br><span class="line">&#123;</span><br><span class="line">String s = getString();</span><br><span class="line">return s.charAt(0);</span><br><span class="line">&#125;</span><br><span class="line">//String类的charAt()方法返回一个String类对象中某个特定位置的字符，在上面的例子中，是第一个字符，号码是0.这个方法避免了无关的字符留在输入缓存中，正是无关的字符导致后续的输入总是出现错误。</span><br><span class="line"></span><br><span class="line">//输入整数</span><br><span class="line">public int getInt() throws IOException</span><br><span class="line">&#123;</span><br><span class="line">String s = getString();</span><br><span class="line">return Integer.parseInt(s);</span><br><span class="line">&#125;</span><br><span class="line">//Integer类的parseInt()方法将字符串转成int型。</span><br><span class="line"></span><br><span class="line">// 输入浮点数</span><br><span class="line"></span><br><span class="line">public int getDouble() throws IOException</span><br><span class="line">&#123;</span><br><span class="line">String s = getString();</span><br><span class="line">Double aDub = Double.valueof(s);</span><br><span class="line">return aDub.doubleValue();</span><br><span class="line">&#125;</span><br><span class="line">//字符串先转换成一个Double型的对象（大写D，double类型的封装类）之后用doubleValue()方法将这个对象转换为double型。</span><br><span class="line">// float型同样有Float类和valueOf()和floatValue()方法</span><br></pre></td></tr></table></figure></li></ul><h1 id="数组array"><a href="#数组array" class="headerlink" title="数组array"></a>数组array</h1><ul><li>其中不允许有空的数据项，否则会出现删除查找困难需要判断，是否有空数据项，难以判断是否结尾。</li><li>查找平均数据项为N/2</li></ul><h2 id="重复值问题"><a href="#重复值问题" class="headerlink" title="重复值问题"></a>重复值问题</h2><ul><li>判断关键字是否重复<table><thead><tr><th></th><th>不允许重复</th><th>允许重复</th></tr></thead><tbody><tr><td>查找</td><td>N/2次比较</td><td>N次比较</td></tr><tr><td>插入</td><td>无比较，一次移动</td><td>无比较，一次移动</td></tr><tr><td>删除</td><td>N/2次比较，N/2次移动</td><td>N次比较，多于N/2次移动</td></tr></tbody></table></li></ul><h2 id="数组操作"><a href="#数组操作" class="headerlink" title="数组操作"></a>数组操作</h2><ul><li><p>初始化数组</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">int[] intArray;</span><br><span class="line">intArray = new int[100];</span><br><span class="line">//or</span><br><span class="line">int[] intArray = new int[100];</span><br><span class="line">//or</span><br><span class="line">int intArray[] = new int[100];</span><br><span class="line">// 自定义数组创建数组对象</span><br><span class="line">autoData[] carArray = new autoData[4000];</span><br><span class="line">//除非开始赋值否则它们将一直是特殊的null对象，尝试访问会出现空指针赋值的错误</span><br><span class="line">，访问前需要先赋值</span><br></pre></td></tr></table></figure></li><li><p>数组长度</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">int arrayLength = intArray.length;</span><br></pre></td></tr></table></figure></li><li><p>访问数组数据项</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">temp = intArray[3];</span><br><span class="line">intArray[7] = 66;</span><br><span class="line">//注意数组下标从0开始，所以上例中是第八个数组值</span><br></pre></td></tr></table></figure></li></ul><h2 id="用Java类设计数组程序"><a href="#用Java类设计数组程序" class="headerlink" title="用Java类设计数组程序"></a>用Java类设计数组程序</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">//lowArray.java</span><br><span class="line">// demonstrate array class with low-level interface</span><br><span class="line">// to run this program: C &gt; java LowArrayApp</span><br><span class="line"></span><br><span class="line">class LowArray</span><br><span class="line">&#123;</span><br><span class="line">private long[] a;//ref to array a</span><br><span class="line">public LowArray(int size)//constructor</span><br><span class="line">&#123; a = new long[size];&#125;//create array</span><br><span class="line">public void setElem(int index,long value) //setvalue</span><br><span class="line">&#123; a[index] = value;&#125;</span><br><span class="line">public long getElem(int index)//get vlaue</span><br><span class="line">&#123;return a[index];&#125;</span><br><span class="line">&#125;//end class LowArray</span><br><span class="line"></span><br><span class="line">class LowArrayApp</span><br><span class="line">&#123;</span><br><span class="line">public static void main(String[] args)</span><br><span class="line">&#123;</span><br><span class="line">LowArray arr;//reference</span><br><span class="line">arr = new LowArray(100);//create LOwArray object</span><br><span class="line">int nElems = 0;//number of items in array</span><br><span class="line">int j;//loop variable</span><br><span class="line"></span><br><span class="line">arr.setELem(0,77);//insert 10 items</span><br><span class="line">arr.setElem(1,99);</span><br><span class="line">arr.setElem(2,44);</span><br><span class="line">arr.setElem(3,55);</span><br><span class="line">arr.setElem(4,22);</span><br><span class="line">arr.setElem(5,88);</span><br><span class="line">arr.setElem(6,11);</span><br><span class="line">arr.setElem(7,00);</span><br><span class="line">arr.setElem(8,66);</span><br><span class="line">arr.setElem(9,33);</span><br><span class="line">nElems = 10;// now 10 items in array</span><br><span class="line"></span><br><span class="line">for (j = 0; j &lt; nElems; j++)// display items</span><br><span class="line">System.out.print(arr.getElem(j) + &quot; &quot;);</span><br><span class="line">System.out.println(&quot;&quot;);</span><br><span class="line">int searchKey = 26;//search for data item</span><br><span class="line">for (j = 0; j &lt; nElems; j++)//for each element</span><br><span class="line">if(arr.getELem(j) == searchKey)// found item?</span><br><span class="line">break;</span><br><span class="line">if(j == nElems)//no</span><br><span class="line">System.out.println(&quot;Can&apos;t find &quot; + searchKey);</span><br><span class="line">else//yes</span><br><span class="line">System.out.println(&quot;Found &quot; + searchKey);</span><br><span class="line">// delete value 55</span><br><span class="line">for(j = 0; j &lt; nELems; k++)// higher ones down</span><br><span class="line">arr.setElem(k, arr.getElem(k+1));</span><br><span class="line">nElems--;//decrement size</span><br><span class="line">for(j = 0; j &lt; nElems; j++)// display items</span><br><span class="line">System.out.print( arr.getElem(j) + &quot; &quot;);</span><br><span class="line">System.out.println(&quot;&quot;);</span><br><span class="line">&#125;//end main()</span><br><span class="line">&#125;//end class LowArrayApp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 将普通的Ｊａｖａ数组封装仅LowArray类中。类中的数组隐藏了起来，它是私有的，所以只有LowArray 类中的方法才能访问它。其中的三个方法分别用来插入和检索一个数据项，和构造函数，创建一个特定大小的数组</span><br><span class="line">//LowArrayApp创建一个LowArray类的对象并用它储存和操作数据。可以将LowArray类想成是工具。LowArrayApp类使用者</span><br></pre></td></tr></table></figure><h2 id="定义更加泛用的接口"><a href="#定义更加泛用的接口" class="headerlink" title="定义更加泛用的接口"></a>定义更加泛用的接口</h2><pre><code>// highArray.java// demonstrates array class with high-level interface// to run this program: C&gt;java HighArrayApp</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> DataStructureAbstract, array, sort, stack, queue, linklist, recursion </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nextthemes</title>
      <link href="/2019/08/13/nextthemes/"/>
      <url>/2019/08/13/nextthemes/</url>
      
        <content type="html"><![CDATA[<h1 id="Next主题配置"><a href="#Next主题配置" class="headerlink" title="Next主题配置"></a>Next主题配置</h1><h2 id="tags配置"><a href="#tags配置" class="headerlink" title="tags配置"></a>tags配置</h2><ol><li>打开主题配置文件</li><li>/menu    搜索菜单配置信息，将tags的注释</li><li>sudo hexo new page “tag” 创建新页面</li><li>在source下出现新的文件夹tags,编辑里面的index.md文件</li><li>添加type：tags</li></ol><h2 id="search配置"><a href="#search配置" class="headerlink" title="search配置"></a>search配置</h2><ol><li>本地安装npm install hexo-generator-search</li><li>修改主题配置文件</li><li>/local search    找到相关位置将enable:true设置</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> nextconfig </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linuxshell</title>
      <link href="/2019/08/13/linuxshell/"/>
      <url>/2019/08/13/linuxshell/</url>
      
        <content type="html"><![CDATA[<h1 id="shell基本介绍"><a href="#shell基本介绍" class="headerlink" title="shell基本介绍"></a>shell基本介绍</h1><ul><li>提供用户与内核进行交互操作的一种接口</li><li>command是shell脚本的基本元素，可以在同一行顺序执行多个命令，用分号隔开</li></ul><h1 id="shell编程的示例"><a href="#shell编程的示例" class="headerlink" title="shell编程的示例"></a>shell编程的示例</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">cd#切换到用户的根目录下，因为.bash_profile在根目录下</span><br><span class="line">. .bash_profile#配置用户的命令行环境</span><br><span class="line">date#显示日期命令</span><br><span class="line">who#显示当前用户命令</span><br></pre></td></tr></table></figure><ul><li>这段代码就是一个简单的脚本</li><li>其中“#!”符号称为“Sha-bang”符号，是Shell脚本的起始符号，目的是告诉系统解释器的目录在哪</li><li>常用的解释器为bash目录位置为bin/bash下，其他的还有sed和awk</li></ul><h1 id="command"><a href="#command" class="headerlink" title="command"></a>command</h1><ul><li>linux的命令已经在linuxbasic系列里有过介绍，这里只做补充重复的内容不会再出现,一下也只是联系一些命令的书写，不会罗列所有选项和意义忘记了可以通过man查询</li><li>useradd -g -G -D -d -m -u</li><li>usermod -d -e -g -l -p -s</li><li>userdel -r 删除用户同时删除/home下对应用户的文件夹</li><li>passwd</li><li>groupadd</li><li>groupmod</li><li>groupdel</li></ul><h1 id="re-regular-expression"><a href="#re-regular-expression" class="headerlink" title="re(regular expression)"></a>re(regular expression)</h1><ul><li>正则表达式，用以快速定位想寻找的字符串<table><thead><tr><th>元字符符号</th><th>元字符意义</th></tr></thead><tbody><tr><td>*</td><td>0个或多个在*字符之前的普通字符</td></tr><tr><td>.</td><td>匹配任意一个字符</td></tr><tr><td>^</td><td>匹配行首或后面字符的非</td></tr><tr><td>$</td><td>匹配行尾</td></tr><tr><td>[]</td><td>匹配字符集合</td></tr><tr><td>|转义符，屏蔽一个元字符的特殊意义</td><td></td></tr><tr><td>&lt;&gt;</td><td>精确匹配,用于精确匹配尖括号内反斜杠前的词</td></tr><tr><td>{n}</td><td>匹配前面字符出现n次</td></tr><tr><td>{n,}</td><td>匹配前面字符至少出现n次</td></tr><tr><td>{n,m}</td><td>匹配前面字符出现n-m次</td></tr></tbody></table></li></ul><hr><table><thead><tr><th>扩展的元字符符号</th><th>意义</th></tr></thead><tbody><tr><td>?</td><td>匹配0个或1个在其之前的那个普通字符</td></tr><tr><td>+</td><td>匹配1个或多个在其之前的普通字符</td></tr><tr><td>()</td><td>表示一个字符集合或用在expr中</td></tr><tr><td>竖线(不知道markdown怎么转义竖线)</td><td>表示或，匹配一组可选的字符</td></tr></tbody></table><h2 id="特例"><a href="#特例" class="headerlink" title="特例"></a>特例</h2><ul><li>^$ 表示空行</li><li>[^] 其中的^表示取反</li><li>JO{3}B    表示O字符出现三次</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> linux, shell, re </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linuxbasic6</title>
      <link href="/2019/08/12/linuxbasic6/"/>
      <url>/2019/08/12/linuxbasic6/</url>
      
        <content type="html"><![CDATA[<h1 id="linux计划任务"><a href="#linux计划任务" class="headerlink" title="linux计划任务"></a>linux计划任务</h1><h2 id="crond-任务调度"><a href="#crond-任务调度" class="headerlink" title="crond 任务调度"></a>crond 任务调度</h2><ul><li>定时调度脚本代码执行</li><li>-e    编辑crontab定时任务</li><li>-l    查询crontab任务</li><li>-r    删除当前用户所有的crontab任务</li><li>对于简单的任务可以直接在crontab中加入任务即可</li><li>对于复杂任务需要shell编程（脚本）</li></ul><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">//命令行执行</span><br><span class="line">crontab -e</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line">五个星号分别表示不同的时间</span><br><span class="line">第一个*一个小时当中的第几分钟0-59</span><br><span class="line">第二个*一天当中第几个小时0-23</span><br><span class="line">第三个* 一个月当中的第几天1-31</span><br><span class="line">第四个* 一年当中第几个月1-12</span><br><span class="line">第五个*一周当中周几0-7(07都代表周日）</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">//下面代码代表每小时的每分钟执行ls -l /etc/ &gt; /tmp/to.txt 命令</span><br><span class="line"></span><br><span class="line">*/1 * * * * ls -l /etc &gt;&gt; /tmp/to.txt</span><br></pre></td></tr></table></figure><table><thead><tr><th>特殊符号</th><th>含义</th></tr></thead><tbody><tr><td>*</td><td>代表任意时间。</td></tr><tr><td>,</td><td>代表不连续的时间。比如“0 8,12,16 /***” 命令就代表在每天的8点0分，12点0分，16点0分都执行一次命令</td></tr><tr><td>-</td><td>代表连续的时间范围内。比如”0 5 * * 1-6命令”，代表在周一到周六的凌晨5点0分执行任务</td></tr><tr><td>*/n</td><td>代表每隔多久执行一次。比如“*/10 * * * *命令”，代表每隔10分钟执行一遍命令</td></tr></tbody></table><h2 id="示例-1"><a href="#示例-1" class="headerlink" title="示例"></a>示例</h2><h3 id="每隔一分钟，就将当前日期信息更新追加到-Desktop-test文件中"><a href="#每隔一分钟，就将当前日期信息更新追加到-Desktop-test文件中" class="headerlink" title="每隔一分钟，就将当前日期信息更新追加到~/Desktop/test文件中"></a>每隔一分钟，就将当前日期信息更新追加到~/Desktop/test文件中</h3><ol><li>先编写一个文件 /home/mytask1.sh</li><li>mytask1.sh内写：date &gt;&gt; ~/Desktop/test</li><li>给mytask1.sh一个可执行权限    chmod 744 /home/mytask1.sh</li><li>cronteb -e </li><li>*/1 * * * * /home/mytask1.sh</li><li>成功</li></ol><hr><h1 id="分区"><a href="#分区" class="headerlink" title="分区"></a>分区</h1><ul><li>将磁盘挂载在根目录下的某一个目录中</li><li>lsblk -f    记忆指令方法：老师不离开（记忆有时可以通过输入法给予快速提示，比如：按时交付了撒酒疯 asjflsjf 输入法会给与最合理的匹配，用于快速记忆无规律指令）</li></ul><h2 id="挂载案例"><a href="#挂载案例" class="headerlink" title="挂载案例"></a>挂载案例</h2><ul><li>虚拟机增加一块新的硬盘，增加完后重启</li><li>分区    fdisk /dev/sdb    之后依次选择m n p 1 w</li><li>格式化    mkfs -t ext4（你要格式化成什么文件类型）  /dev/sdb1(这个是你要格式化的硬盘)</li><li>挂载    <ul><li>先创建一个目录用于挂载</li><li>挂载 mount /dev/sdb1    挂载目录</li><li>重启后会恢复</li></ul></li><li>设置可以自动挂载 <ul><li>vim /etc/fstab</li><li>编辑 /dev/sdb1            /要挂载的目录        etc4    defaults    0 0</li><li>编辑完成后退出    </li><li>命令行输入mount -a</li><li>重启</li></ul></li></ul><h2 id="卸载磁盘"><a href="#卸载磁盘" class="headerlink" title="卸载磁盘"></a>卸载磁盘</h2><ul><li>umount 挂载磁盘名称 or 挂载目录名称</li></ul><h2 id="磁盘情况查询"><a href="#磁盘情况查询" class="headerlink" title="磁盘情况查询"></a>磁盘情况查询</h2><ul><li>用于查看磁盘的使用情况</li><li>df -lh</li></ul><h2 id="查看指定目录磁盘占用情况"><a href="#查看指定目录磁盘占用情况" class="headerlink" title="查看指定目录磁盘占用情况"></a>查看指定目录磁盘占用情况</h2><ul><li>du <ul><li>-s 指定目录的大小汇总</li><li>-h 带计量单位</li><li>-a 含文件</li><li>-max-depth=1 子目录深度</li><li>-c 列出明细同时增加汇总值</li></ul></li><li>统计目录下有多少文件<ul><li>ls -l /home | grep “^-“ | wc -l    ls查看指定目录|过滤出其中的以-开头的文件|wc -l是统计数量 </li><li>如果要递归统计 ls -lR …</li></ul></li></ul><hr><h1 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h1><h2 id="find"><a href="#find" class="headerlink" title="find"></a>find</h2><ul><li>-name    文件名方式查找    例find /查找目录 -name 查找文件名，可以采用通配符</li><li>-user 查找指定用户名的所有文件</li><li>-size 按照指定文件大小查找文件</li></ul><h2 id="locate指令"><a href="#locate指令" class="headerlink" title="locate指令"></a>locate指令</h2><ul><li>可以快速定位文件位置</li><li>第一次运行时必须使用updatedb指令创建locate数据库</li></ul><hr><h1 id="这次课程中遇到问题"><a href="#这次课程中遇到问题" class="headerlink" title="这次课程中遇到问题"></a>这次课程中遇到问题</h1><ul><li>编辑时碰到触摸板导致卡死，解决方法：菜单栏终端下的只读勾选了，取消即可</li><li>编辑时误按ctrl + s, 解决办法： ctrl + q 解决</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ideaIDE</title>
      <link href="/2019/08/11/ideaIDE/"/>
      <url>/2019/08/11/ideaIDE/</url>
      
        <content type="html"><![CDATA[<h1 id="idea配置"><a href="#idea配置" class="headerlink" title="idea配置"></a>idea配置</h1><h2 id="idea安装位置"><a href="#idea安装位置" class="headerlink" title="idea安装位置"></a>idea安装位置</h2><ul><li>/usr/local/idea/</li></ul><h2 id="idea配置文件"><a href="#idea配置文件" class="headerlink" title="idea配置文件"></a>idea配置文件</h2><ul><li>/usr/local/idea/bin/idea.vmoptions文件</li><li>文件可以改变idea的运存缓存等信息</li></ul><h2 id="idea的启动文件"><a href="#idea的启动文件" class="headerlink" title="idea的启动文件"></a>idea的启动文件</h2><ul><li>/usr/local/idea/bin/idea.sh文件</li><li>快速打开可以将  sudo ln -s /idea安装目录/bin/idea.sh /usr/bin/ 这样就可以在命令行启动idea</li></ul><h2 id="idea的家目录下配置文件"><a href="#idea的家目录下配置文件" class="headerlink" title="idea的家目录下配置文件"></a>idea的家目录下配置文件</h2><ul><li>第一次启动后会在~/.IdeaIC20XX.X文件夹，里面有两个文件夹<ul><li>config 中记录了在idea的部分setting中的用户配置</li><li>system 中记录了缓存，编译，日志，框架等用户配置信息</li></ul></li><li>config 中也有idea64.vmoptions文件，建议修改这个文件，加快idea运行速度。</li></ul><h1 id="idea项目位置"><a href="#idea项目位置" class="headerlink" title="idea项目位置"></a>idea项目位置</h1><ul><li>~/IdeaProjects/</li><li>类似于eclipse中的workspaces</li><li>新建java项目后会多出项目的文件夹</li></ul><h2 id="src文件夹"><a href="#src文件夹" class="headerlink" title="src文件夹"></a>src文件夹</h2><ul><li>随项目建立，存放包和java文件</li></ul><h2 id="out文件夹"><a href="#out文件夹" class="headerlink" title="out文件夹"></a>out文件夹</h2><ul><li>随着项目运行建立，存放编译好的class文件</li></ul><h1 id="idea的插件"><a href="#idea的插件" class="headerlink" title="idea的插件"></a>idea的插件</h1><h2 id="ideavim"><a href="#ideavim" class="headerlink" title="ideavim"></a>ideavim</h2><ul><li>默认在插件列表了，安装即可</li><li>配置文件存放在~/.ideavimrc<ul><li>可以设置leader键，但是不能使用插件</li></ul></li><li>重启进入idea生效配置后使用vim编辑器，建议还是多设置写commandmode的leader快捷键，这样可以讲编辑的影响降到最低</li><li>:actionlist可以查看vim能设置的idea相关快捷键</li><li>设置方法nnoremap <leader>gc :action GotoClass<cr></cr></leader></li></ul><h1 id="idea快捷键"><a href="#idea快捷键" class="headerlink" title="idea快捷键"></a>idea快捷键</h1><ul><li>可以设置成类似eclipse的快捷键，当然还是有一部分会不一样。我还是决定是适应新快捷键</li><li>设置位置setting中的keymap</li></ul><h2 id="有时间再补快捷键列表"><a href="#有时间再补快捷键列表" class="headerlink" title="有时间再补快捷键列表"></a>有时间再补快捷键列表</h2><h1 id="idea模板"><a href="#idea模板" class="headerlink" title="idea模板"></a>idea模板</h1><ul><li>插入文档注释<ul><li>Setting 中的File and Code Templates中设置</li></ul></li><li>Setting 中的Live Templateplates中设置简写补全模板<ul><li>main 补全public static void main(String[] args){</li><li>sout 补全System.out.println()</li><li>可以自己设置</li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> idea </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>javascript3</title>
      <link href="/2019/08/10/javascript3/"/>
      <url>/2019/08/10/javascript3/</url>
      
        <content type="html"><![CDATA[<h1 id="javascript对象和类"><a href="#javascript对象和类" class="headerlink" title="javascript对象和类"></a>javascript对象和类</h1><h2 id="内部对象"><a href="#内部对象" class="headerlink" title="内部对象"></a>内部对象</h2><ul><li>动态对象<ul><li>需用new关键字来创建一个对象示例，才能使用“对象实例名.成员”的方式来访问其属性和方法 </li></ul></li><li>静态对象<ul><li>不需要用new关键字创建对象实例，直接使用“对象名.成员”的方式来访问其属性和方法即可 </li></ul></li></ul><h3 id="Object对象"><a href="#Object对象" class="headerlink" title="Object对象"></a>Object对象</h3><ul><li><p>创建Object对象</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">obj = new Object([value])</span><br></pre></td></tr></table></figure><ul><li>obj 为必选项。要赋值为Object对象的变量名</li><li>value 可选项。任意一种Jscript基本数据类型（Number、Boolean or String）如果value是一个对象，返回不做改动的该对象。如果value为null,undefined or 没有给出，则产生一个没有内容的对象。</li></ul></li><li><p>Object 对象的属性</p><ul><li><p>prototype属性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">objectName.prototype</span><br><span class="line">## 该属性返回对象类型原型的引用</span><br><span class="line">## 参数说明： objectName:对象名称</span><br><span class="line">## 用prototype属性可以提供对象的类的一组基本功能。对象的新实例“继承”赋予该对象原型的操作</span><br><span class="line"></span><br><span class="line">function array_max()&#123;</span><br><span class="line">var i,max = this[0];</span><br><span class="line">for(i = 1;i &lt; this.length; i++)&#123;</span><br><span class="line">if(max &lt; this[i])</span><br><span class="line">max = this[i];</span><br><span class="line">&#125;</span><br><span class="line">return max</span><br><span class="line">&#125;</span><br><span class="line">Array.prototype.max = array_max;//注意这里没有括号</span><br><span class="line">var x = new Array(1,2,3,4,5,6);</span><br><span class="line">var y = x.max();</span><br><span class="line"></span><br><span class="line">//上面的代码执行后，y保存数组x的最大值</span><br></pre></td></tr></table></figure></li><li><p>constructor属性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">// object.constructor</span><br><span class="line">// 参数说明object:必选项对象或者函数的名称。constructor属性是所有具有prototype的对象的成员。他们包括除了Global和MAth对象以外的所有Jscript固有对象。constructor属性保存了对构造特定对象市里的函数引用</span><br><span class="line"></span><br><span class="line">x= new String(&quot;Hi&quot;);</span><br><span class="line">if(x.constructor == String)</span><br><span class="line">//进行处理（条件为真）</span><br><span class="line">or</span><br><span class="line"></span><br><span class="line">function MyFunc()&#123;</span><br><span class="line">//函数体</span><br><span class="line">&#125;</span><br><span class="line">y = new MyFunc;</span><br><span class="line">if(y.constructor == MyFunc)</span><br><span class="line">//进行处理（条件为真）</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="Object对象的方法"><a href="#Object对象的方法" class="headerlink" title="Object对象的方法"></a>Object对象的方法</h3><h4 id="toLocaleString-方法"><a href="#toLocaleString-方法" class="headerlink" title="toLocaleString()方法"></a>toLocaleString()方法</h4><ul><li>该方法返回一个日期，该日期使用当前区域设置并已被转换为字符串</li><li>dataObj.toLocaleString()<ul><li>参数说明dataObj:必选项。为任意Data对象</li><li>toLocaleString()方法返回一个String对象，该对象中包括了用当前区域设置的默认格式表示的日期（需要注意在不同时间段的时间显示格式是不同的注意区分）</li></ul></li></ul><h4 id="toString-方法"><a href="#toString-方法" class="headerlink" title="toString() 方法"></a>toString() 方法</h4><ul><li>该方法返回对象的字符串表示</li><li>objectname.toString([radix])<ul><li>参数说明objectname必选项。要得到字符串表示的对象</li><li>radix 可选项，指定将数字值转换为字符串时的进制</li></ul></li></ul><table><thead><tr><th>对象</th><th>操作</th></tr></thead><tbody><tr><td>Array</td><td>将Array的元素转换为字符串，结果字符串由逗号分隔且连接起来</td></tr><tr><td>Boolean</td><td>如果Boolean值是true,则返回true;否则返回false</td></tr><tr><td>Date</td><td>返回日期的文字表示法</td></tr><tr><td>Error</td><td>返回一个包含相关错误消息的字符串</td></tr><tr><td>Function</td><td>返回如下格式的字符串，其中functionname 是被调用的toString()方法函数的名称：function functionname(){[native code]}</td></tr><tr><td>Number</td><td>返回数字的文字表示</td></tr><tr><td>String</td><td>返回String 对象的值</td></tr><tr><td>默认</td><td>返回[object objectname],其中objectname是对象类型的名称</td></tr></tbody></table><h4 id="valueOf-方法"><a href="#valueOf-方法" class="headerlink" title="valueOf()方法"></a>valueOf()方法</h4><ul><li>返回指定对象的原始值</li><li>object.valueOf()<ul><li>object是任意固有javascript对象<table><thead><tr><th>对象</th><th>返回值</th></tr></thead><tbody><tr><td>Array</td><td>数组的元素被转换为字符串，这些字符串由逗号分隔，并连接在一起。其操作与Array.toString和Array.join方法相同</td></tr><tr><td>boolean</td><td>Boolean值</td></tr><tr><td>Date</td><td>储存的时间是从1970年1月1日午夜开始记得毫秒数</td></tr><tr><td>Function</td><td>函数本身</td></tr><tr><td>Number</td><td>数字值</td></tr><tr><td>Object</td><td>对象本身，这是默认情况</td></tr><tr><td>String</td><td>字符串值</td></tr></tbody></table></li></ul></li></ul><h2 id="String对象"><a href="#String对象" class="headerlink" title="String对象"></a>String对象</h2><ul><li>动态对象</li><li>主要用于处理和格式化文本字符串以及定位字符串中的子字符串</li></ul><h3 id="创建String对象"><a href="#创建String对象" class="headerlink" title="创建String对象"></a>创建String对象</h3><h4 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h4><ul><li>var newstr = new String(StringText)<ul><li>newstr 创建的String对象名</li><li>StringText 字符串文本</li><li>例 var newstr = new String(“欢迎使用JavaScript脚本”)</li><li>实际上任意引号引起来的字符串常量都是String对象，可以直接使用String对象的方法和属性</li><li>字符串返回的是String类型,但是String对象返回的是Object类型</li></ul></li></ul><h3 id="String对象的属性"><a href="#String对象的属性" class="headerlink" title="String对象的属性"></a>String对象的属性</h3><h4 id="length属性"><a href="#length属性" class="headerlink" title="length属性"></a>length属性</h4><ul><li>stringObject.length</li><li>用于获得当前字符串的长度</li></ul><h4 id="constructor属性"><a href="#constructor属性" class="headerlink" title="constructor属性"></a>constructor属性</h4><ul><li>Object.constructor</li><li>对当前对象的函数引用<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">// 作用1类似于Object对象的使用，下面展示另一种应用</span><br><span class="line">// 获取当前对象所引用的函数代码</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">function chronicle(name,year)</span><br><span class="line">&#123;</span><br><span class="line">this.name = name;</span><br><span class="line">this.year = year;</span><br><span class="line">&#125;</span><br><span class="line">var fred = new chronicle(&quot;Year&quot;,2007);</span><br><span class="line">alert(fred.constructor);//显示对象中的函数代码</span><br></pre></td></tr></table></figure></li></ul><h4 id="prototype属性"><a href="#prototype属性" class="headerlink" title="prototype属性"></a>prototype属性</h4><ul><li>可以为对象添加属性和方法</li><li>object.prototype.name = value<ul><li>object 对象名or字符串变量</li><li>name 要添加的属性名</li><li>value 添加的属性值</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">function personnel(name.age)</span><br><span class="line">&#123;</span><br><span class="line">this.name = name;</span><br><span class="line">this.age = age;</span><br><span class="line">&#125;</span><br><span class="line">var information = new personnel(&quot;张三哦&quot;, 27);</span><br><span class="line">personel.prototype.salary = null;//向对象中添加属性，书上是这样写得但是这个是个类啊，对象应该是information才对</span><br><span class="line">information.salary = 1700;</span><br><span class="line">alert(information.salary);</span><br></pre></td></tr></table></figure><h4 id="String-对象的方法"><a href="#String-对象的方法" class="headerlink" title="String 对象的方法"></a>String 对象的方法</h4><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>anchor()</td><td>创建HTML锚</td></tr><tr><td>big()</td><td>使用大号字体显示字符串</td></tr><tr><td>small()</td><td>使用小号字体显示字符串</td></tr><tr><td>fontsize()</td><td>使用指定的尺寸来显示字符串</td></tr><tr><td>bold()</td><td>使用粗体来显示字符串</td></tr><tr><td>italics()</td><td>使用斜体来显示字符串</td></tr><tr><td>link()</td><td>将字符串显示为链接</td></tr><tr><td>strike()</td><td>使用删除线来显示字符串</td></tr><tr><td>blink()</td><td>显示闪动字符串，该方法不支持IE浏览器</td></tr><tr><td>fixed()</td><td>以打字机文本显示字符串</td></tr><tr><td>charAt()</td><td>返回指定位置的字符（返回的字符编码）</td></tr><tr><td>charCodeAt()</td><td>返回指定位置的字符（返回的是字符子串）</td></tr><tr><td>concat()</td><td>连接字符串</td></tr><tr><td>fontcolor()</td><td>使用指定颜色来显示字符串</td></tr><tr><td>fromCharCode()</td><td>从字符编码创建一个字符串</td></tr><tr><td>indexOf()</td><td>检索字符串</td></tr><tr><td>lastIndexOf</td><td>从后向前搜索字符串</td></tr><tr><td>localeCompare</td><td>用本地特定的顺序来比较两个字符串</td></tr><tr><td>match()</td><td>在字符串内检索指定的值或找到一个或多个与正则表达式相匹配的文本</td></tr><tr><td>repalce()</td><td>替换与正则表达式匹配的子串</td></tr><tr><td>search()</td><td>检索与正则表达式相匹配的值</td></tr><tr><td>split()</td><td>把字符串分割为字符串数组</td></tr><tr><td>substr()</td><td>从起始索引号提取字符串中指定数目的字符</td></tr><tr><td>substring()</td><td>提取字符串中两个指定的索引号之间的字符</td></tr><tr><td>slice()</td><td>提取字符串的片段并在新的字符串中返回被提取的部分</td></tr><tr><td>sub()</td><td>把字符串显示为下标</td></tr><tr><td>sup()</td><td>把字符串显示为上标</td></tr><tr><td>toLocaleLowerCase()</td><td>按照本地方式把字符串转换为小写</td></tr><tr><td>toLocaleUpperCase()</td><td>按照本地方式把字符串转换为大写</td></tr><tr><td>toLowerCase()</td><td>把字符串转换为小写</td></tr><tr><td>toUpperCase()</td><td>把字符串转换为大写</td></tr><tr><td>toSource()</td><td>代表对象的源代码</td></tr><tr><td>valueOf()</td><td>返回某个字符串对象的原始值</td></tr></tbody></table><h2 id="Date对象"><a href="#Date对象" class="headerlink" title="Date对象"></a>Date对象</h2><ul><li>用于在网页中实现时间日期</li></ul><h3 id="创建Date对象"><a href="#创建Date对象" class="headerlink" title="创建Date对象"></a>创建Date对象</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dataObj = new Date();</span><br><span class="line">dateObj = new Date(dateVal);</span><br><span class="line">dateObj = new Date(year, month, date[,hours[,minutes[,seconds[,ms]]]]);</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>dateObj</td><td>必选项，要赋值为Date对象的变量名</td></tr><tr><td>dateVal</td><td>必选项，如果是数字，从1970年1月1日计算，如果字符串，按parse方法中的规则解析，也可以从某些ActiveX(R)对象返回的VT_DATE值</td></tr><tr><td>year</td><td>必选项，需要完整年份如1970</td></tr><tr><td>month</td><td>必选项，0-11之间</td></tr><tr><td>date</td><td>必选项，1-31之间</td></tr><tr><td>hours</td><td>可选，有下级必选，0-23</td></tr><tr><td>minutes</td><td>可选，0-59</td></tr><tr><td>seconds</td><td>可选，0-59</td></tr><tr><td>ms</td><td>可选，0-999</td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var newDate = new Date(&quot;Jan 2,2008 19:41:40&quot;);</span><br><span class="line">document.write(newDate);</span><br><span class="line"></span><br><span class="line">//运行结果 Wed Jan 2 19:41:40 UTC+0800 2008</span><br></pre></td></tr></table></figure><h3 id="Date对象的属性"><a href="#Date对象的属性" class="headerlink" title="Date对象的属性"></a>Date对象的属性</h3><ul><li>constructor</li><li>prototype</li><li>类似用法不讲解了</li></ul><h3 id="Date对象的方法"><a href="#Date对象的方法" class="headerlink" title="Date对象的方法"></a>Date对象的方法</h3><ul><li>好多啊不想打了，查吧</li><li>大致分为这几类<ul><li>Date()</li><li>get…()</li><li>parse()</li><li>set…()</li><li>to…()</li><li>UTC()</li><li>valueOf()</li></ul></li></ul><h2 id="event-对象"><a href="#event-对象" class="headerlink" title="event 对象"></a>event 对象</h2><ul><li>主要用来描述JavaScript的事件<ul><li>事件发生元素</li><li>键盘状态</li><li>鼠标位置</li><li>鼠标按钮状态</li></ul></li></ul><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><ul><li>IE中event可以全局引用例： event.propertyName</li><li>W3C 中引用event对象<ul><li>必须明确的将event作为参数传递到事件处理函数中</li><li>例： onKeyUp = “example(this,event)” or function example(widget,event){…}</li><li>尽量避免event作为传入参数变量名</li></ul></li></ul><h3 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h3><ul><li>altLeft属性<ul><li>获取左alt键的当前状态，true为关闭，false不关闭 </li><li>[windows.]event.altLeft</li></ul></li><li>ctrlLeft属性</li><li>shiftLeft属性</li><li>button属性<ul><li>设置或获取事件发生时用户所按的鼠标键</li><li>[windows.]event.button</li><li>此属性仅用于onmousedown,onmouseup,onmousemove事件，其他事件都返回0</li></ul></li></ul><table><thead><tr><th>button属性的值</th><th>说明</th></tr></thead><tbody><tr><td>0</td><td>表示没有按键</td></tr><tr><td>1</td><td>按下左键</td></tr><tr><td>2</td><td>按下右键</td></tr><tr><td>3</td><td>同时按下左键和右键</td></tr><tr><td>4</td><td>按下中键</td></tr><tr><td>5</td><td>同时按下左中</td></tr><tr><td>6</td><td>同时按下右中</td></tr><tr><td>7</td><td>同时按下左中右</td></tr></tbody></table><ul><li>clientX 属性<ul><li>该属性获取鼠标在浏览器窗口中的X坐标，他是一个只读属性，即只能获取鼠标当前位置不能改变鼠标位置</li><li>[windows.]event.clientX</li></ul></li><li>clientY属性</li><li>X属性<ul><li>该属性设置或获取鼠标指针位置相对于CSS属性中有position属性的上级元素的X轴坐标。如果CSS属性中没有position属性的上级元素，默认以body元素作为参考对象</li><li>[windows.]event.X </li><li>如果鼠标事件触发后，鼠标移出窗口外，则返回的值为-1,。这是个只读属性，只能通过他获取鼠标当前位置，但不能用来改变鼠标位置。</li></ul></li><li>Y属性</li><li>cancelBubble属性<ul><li>检测是否接受上层元素的事件的控制。如果该属性的值是false,则允许被上层元素的事件控制；否则值为true,则不被上层元素的事件控制。</li><li>[windows.]event.cancelBubble[= cancelBubble]</li><li>该属性的值为一个可读写的boolean,默认false</li></ul></li><li>srcElement属性<ul><li>用于设置或获取触发事件的对象</li><li>是事件初始目标的HTML元素对象引用</li><li>由事件通过元素容器层次进行处理，并可以在任意层次进行处理，因此由一个属性指向产生初始事件的元素很有帮助。</li></ul></li></ul><p>对象类型有点多，今天就写到这了，应该多编写代码而不是写心得，感觉打字是越来越熟练，但是打示例代码的速度还是有些慢。由于没有彻底学完HTML和CSS,javascript理解有些困难，所以暂且告一段落。待日后有时间再学习。</p>]]></content>
      
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>javascript2</title>
      <link href="/2019/08/09/javascript2/"/>
      <url>/2019/08/09/javascript2/</url>
      
        <content type="html"><![CDATA[<h1 id="Javascript流程控制"><a href="#Javascript流程控制" class="headerlink" title="Javascript流程控制"></a>Javascript流程控制</h1><h2 id="选择语句"><a href="#选择语句" class="headerlink" title="选择语句"></a>选择语句</h2><h3 id="if语句"><a href="#if语句" class="headerlink" title="if语句"></a>if语句</h3><ul><li>类似C语言</li></ul><h3 id="switch语句"><a href="#switch语句" class="headerlink" title="switch语句"></a>switch语句</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">switch(expression)&#123;</span><br><span class="line">case judgement 1:</span><br><span class="line">statement1;</span><br><span class="line">break;</span><br><span class="line">case judgement 2:</span><br><span class="line">statement2;</span><br><span class="line">break;</span><br><span class="line">...</span><br><span class="line">default:</span><br><span class="line">statement n;</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h2><h3 id="while语句"><a href="#while语句" class="headerlink" title="while语句"></a>while语句</h3><ul><li>类Ｃ语言</li></ul><h3 id="dowhile语句"><a href="#dowhile语句" class="headerlink" title="dowhile语句"></a>dowhile语句</h3><h3 id="for语句"><a href="#for语句" class="headerlink" title="for语句"></a>for语句</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">for(i=1;i&lt;100;i+=1)&#123;</span><br><span class="line">sum = sum +i;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="跳转语句"><a href="#跳转语句" class="headerlink" title="跳转语句"></a>跳转语句</h2><h3 id="continue语句"><a href="#continue语句" class="headerlink" title="continue语句"></a>continue语句</h3><ul><li>终止本次循环并开始下一次循环</li></ul><h3 id="break语句"><a href="#break语句" class="headerlink" title="break语句"></a>break语句</h3><ul><li>中断循环</li></ul><h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">function functionName(parameter 1,parameter 2,...)&#123;</span><br><span class="line">statements;</span><br><span class="line">[return expression]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="调用"><a href="#调用" class="headerlink" title="调用"></a>调用</h2><ul><li>通常函数定义在head中，通常会被在body段调用</li><li>如果定义前调用会出错</li><li>还可以通过链接调用函数<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">## 定义函数 test(),之后为调用过程</span><br><span class="line"></span><br><span class="line">&lt;a href= &quot;javascript:test();&quot;&gt;test&lt;/a&gt;</span><br></pre></td></tr></table></figure></li></ul><h2 id="参数的使用"><a href="#参数的使用" class="headerlink" title="参数的使用"></a>参数的使用</h2><ul><li>定义函数时的参数叫做形参（用逗号分隔多个形参）</li><li>使用函数时提供的参数是实参（多个实参用逗号分隔）</li><li>定义了多少形参调用函数时就要使用多少实参（这里注意和python不太一样，Python中可以定义有限个形参，但是不一定使用它）</li></ul><h2 id="函数返回值"><a href="#函数返回值" class="headerlink" title="函数返回值"></a>函数返回值</h2><ul><li>可以将定义的函数返回一个值供其他程序段使用</li><li>return</li></ul><h2 id="嵌套函数"><a href="#嵌套函数" class="headerlink" title="嵌套函数"></a>嵌套函数</h2><ul><li>定义：在函数内定义函数</li><li>好处：内部函数可以得到外部函数的参数和全局变量</li><li>缺点：函数的可读性降低</li></ul><h2 id="递归函数"><a href="#递归函数" class="headerlink" title="递归函数"></a>递归函数</h2><ul><li>函数体调用自身</li><li>容易造成死循环</li><li>定义递归函数的两个必要条件<ul><li>结束递归的条件</li><li>包括一个递归调用语句</li></ul></li></ul><h2 id="javascript中的内置函数"><a href="#javascript中的内置函数" class="headerlink" title="javascript中的内置函数"></a>javascript中的内置函数</h2><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td>eval()</td><td>求字符串中表达式的值</td></tr><tr><td>isFinite()</td><td>判断一个数值是否为无穷大</td></tr><tr><td>isNaN()</td><td>判断一个数值是否为NaN</td></tr><tr><td>parseInt()</td><td>将字符串转换为整型</td></tr><tr><td>parseFloat()</td><td>将字符型转换为浮点型</td></tr><tr><td>encodeURI()</td><td>将字符串转换为有效的URL</td></tr><tr><td>encodeURIComponent()</td><td>将字符串转换为有效的URL组件</td></tr><tr><td>decodeURI()</td><td>对encodeURL()编码的文本进行解码</td></tr><tr><td>decodeURIComponent()</td><td>对encodeURIComponent()编码的文本进行解码</td></tr></tbody></table><ul><li>使用示例<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">## 用于将首位数字字符串转换为数字，如果不是以数字开头会返回NaN</span><br><span class="line">parseInt(StringNum,[n])</span><br><span class="line"></span><br><span class="line">## 将首位为数字的字符串转换为浮点数，如果不是以数字开头会返回NaN</span><br><span class="line">parseFloat(StringNum)</span><br><span class="line"></span><br><span class="line">isNaN(Num)</span><br><span class="line">isFinite(Num)</span><br><span class="line">## 参数说明url需要转换为网络资源地址的字符串</span><br><span class="line"></span><br><span class="line">## URI和URL都可以表示网络资源地址，URI的表示范围更广泛，通常情况下两者是等同的,encodeURI()函数只对字符串中有意义的字符进行转义。如将字符串中的空格转换为&quot;%20&quot;</span><br><span class="line">encodeURI(url)</span><br><span class="line"></span><br><span class="line">## 将encodeURI()转码的网络资源地址转换为字符串并返回，decodeURI()是encodeURI的逆向操作</span><br></pre></td></tr></table></figure></li></ul><h2 id="Function-构造函数和函数直接量"><a href="#Function-构造函数和函数直接量" class="headerlink" title="Function()构造函数和函数直接量"></a>Function()构造函数和函数直接量</h2><ul><li>构造函数Function()允许在运行时动态创建和编译JavaScript代码，而函数直接量却是程序构造的一个静态部分，就像函数语句一样</li><li>每次构造函数Function()时都会解析函数体，并创建一个新的函数对象。如果这个函数使用比较频繁则不推荐使用构造函数，会造成效率低下。而函数直接量不论是循环还是嵌套函数中，既不会每次调用重新编译，也不会每次遇到时都创建一个新的函数对象</li><li>Function()创建的函数使用的不是静态作用域，相反地，每次都当做顶级函数进行编译</li></ul><pre><code>## 通过自定义函数限制键鼠操作function maskingkeyboard(){    if(event.keyCode==8){            //判断是否为退格键        event.keyCode=0;        event.returnValue= false;        alert(&quot;当前设置不允许使用退格键&quot;);    }    if(event.keyCode==13){            //判断是否为回车键        event.keyCode=0;        event.returnValue= false;        alert(&quot;当前设置不允许使用回车键&quot;);    }    if(event.keyCode==116){            //判断是否为F5键        event.keyCode=0;        event.returnValue= false;        alert(&quot;当前设置不允许使用F5键&quot;);    }    if((event.altKey)&amp;&amp;((window.event.keyCode==37)||(window.event.keyCode==39))){                //判断是否为Alt+左右方向键        event.returnValue= false;        alert(&quot;当前设置不允许使用Alt+左右方向键&quot;);    }    if((event.ctrlKey)&amp;&amp;(event.keyCode==78)){                //判断是否为ctrl+N        event.returnValue= false;        alert(&quot;当前设置不允许使用Ctrl+N &quot;);    }    if((event.shiftKey)&amp;&amp;(event.keyCode==121)){                //判断是否为shift+F10组合键        event.returnValue= false;        alert(&quot;当前设置不允许使用shift+ F10&quot;);    }}function rightKey(){    //判断单击是否为鼠标右键    if(event.button == 2){        event.returnValue=false;        alert(&quot;禁止使用鼠标右键！&quot;);    }}##在html中body处插入键盘控制函数&lt;body onkeydown=&quot;maskingKeyboard()&quot;&gt;##在文档的onmousedown事件中调用rightKey()函数document.onmousedown=rightKey;        //当鼠标右键被单击时调用rightKey()函数        </code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>javaScript1</title>
      <link href="/2019/08/08/javascript1/"/>
      <url>/2019/08/08/javascript1/</url>
      
        <content type="html"><![CDATA[<h1 id="javascript简介"><a href="#javascript简介" class="headerlink" title="javascript简介"></a>javascript简介</h1><h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><ul><li>解释型语言</li></ul><h2 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h2><ul><li>验证用户输入内容</li><li>动画效果</li><li>窗口应用</li><li>文字特效</li><li>jQuery</li><li>Ajax</li></ul><h2 id="html中的应用"><a href="#html中的应用" class="headerlink" title="html中的应用"></a>html中的应用</h2><h3 id="直接嵌入"><a href="#直接嵌入" class="headerlink" title="直接嵌入"></a>直接嵌入</h3><ul><li>《script》。。。《/script》的方式嵌入内容</li></ul><h4 id="相关属性"><a href="#相关属性" class="headerlink" title="相关属性"></a>相关属性</h4><ul><li>因为vim中有JavaScript的用法所以这里用中文书名号代替尖括号，防止无法显示问题</li><li>《script language = “JavaScript1.5”&gt;脚本语言类型及版本</li><li>《script src= “01.js”&gt; 用以指定外部脚本路径，常用Javascript脚本，扩展名为.js</li><li>《script type = “text/javascript”&gt; 用于代替language</li><li>《script defer》 文档加载完毕后再执行脚本，用于加快网页加载速度<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt; ... &lt;/script&gt;</span><br><span class="line">或者采用代码段方式编辑</span><br></pre></td></tr></table></figure></li></ul><h3 id="链接外部Javascript文件"><a href="#链接外部Javascript文件" class="headerlink" title="链接外部Javascript文件"></a>链接外部Javascript文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//方式说明</span><br><span class="line">&lt;script language = &quot;javascript&quot; src = &quot;javascript.js&quot;&gt; ... &lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li>用这样的方式则可以按路径使用Javascript文件</li></ul><h2 id="JavaScript-语法"><a href="#JavaScript-语法" class="headerlink" title="JavaScript 语法"></a>JavaScript 语法</h2><h3 id="执行顺序"><a href="#执行顺序" class="headerlink" title="执行顺序"></a>执行顺序</h3><ul><li>顺序执行</li><li>如果需要在整个html文件中执行最好放在head中</li></ul><h3 id="大小写敏感"><a href="#大小写敏感" class="headerlink" title="大小写敏感"></a>大小写敏感</h3><ul><li>需要与html作对比，html没有大小写敏感</li></ul><h3 id="每行结尾分号可有可无"><a href="#每行结尾分号可有可无" class="headerlink" title="每行结尾分号可有可无"></a>每行结尾分号可有可无</h3><ul><li>建议还是加上吧</li></ul><h2 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h2><ul><li>首字符必须是字母，下划线美元符号</li><li>之后可以有数字</li></ul><h2 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h2><table><thead><tr><th>—</th><th>—</th><th align="left">—</th><th align="right">—</th><th>—</th><th>—</th></tr></thead><tbody><tr><td>abstract</td><td>continue</td><td align="left">finally</td><td align="right">instanceof</td><td>private</td><td>this</td></tr><tr><td>boolean</td><td>default</td><td align="left">public</td><td align="right">int</td><td>float</td><td>throw</td></tr><tr><td>break</td><td>do</td><td align="left">for</td><td align="right">interface</td><td>return</td><td>typeof</td></tr><tr><td>byte</td><td>double</td><td align="left">function</td><td align="right">long</td><td>short</td><td>true</td></tr><tr><td>case</td><td>else</td><td align="left">goto</td><td align="right">native</td><td>static</td><td>var</td></tr><tr><td>catch</td><td>extends</td><td align="left">implements</td><td align="right">new</td><td>super</td><td>void</td></tr><tr><td>char</td><td>false</td><td align="left">import</td><td align="right">null</td><td>switch</td><td>while</td></tr><tr><td>class</td><td>final</td><td align="left">in</td><td align="right">package</td><td>synchronized</td><td>with</td></tr></tbody></table><h2 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">const 常量名：数据类型=值；</span><br></pre></td></tr></table></figure><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><ul><li><p>声明</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var varible;</span><br></pre></td></tr></table></figure></li><li><p>可声明同时赋值</p></li><li><p>可同时声明赋值多个变量</p></li><li><p>变量只在脚本内起作用，而且也分为局部和全局变量</p></li></ul><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><ul><li>整型</li><li>进制不同0x十六进制，0八进制</li><li>浮点型</li><li>字符串</li><li>boolean</li></ul><h3 id="特殊数据类型"><a href="#特殊数据类型" class="headerlink" title="特殊数据类型"></a>特殊数据类型</h3><ul><li><p>转义字符</p><table><thead><tr><th>转义字符</th><th align="right">说明</th></tr></thead><tbody><tr><td>\b</td><td align="right">退格</td></tr><tr><td>\n</td><td align="right">回车换行</td></tr><tr><td>\t</td><td align="right">tab</td></tr><tr><td>\f</td><td align="right">换页</td></tr><tr><td>&#39;</td><td align="right">单引号</td></tr><tr><td>&quot;</td><td align="right">双引号</td></tr><tr><td>\v</td><td align="right">跳格（tab水平）</td></tr><tr><td>\r</td><td align="right">换行（光标位置和回车不同）</td></tr><tr><td>\</td><td align="right">反斜杠</td></tr><tr><td>\OOO</td><td align="right">八进制数</td></tr><tr><td>\xHH</td><td align="right">十六进制数</td></tr><tr><td>\uhhhh</td><td align="right">十六进制Unicode字符</td></tr></tbody></table></li><li><p>示例</p><pre><code><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">document.writeln(&quot;&lt;pre&gt;&quot;);</span><br><span class="line">document.writeln(&quot;轻松学习\nJavaScript语言！&quot;);</span><br><span class="line">document.writeln(&quot;&lt;/pre&gt;&quot;);</span><br><span class="line">运行结果为</span><br><span class="line">轻松学习</span><br><span class="line">JavaScript语言！</span><br></pre></td></tr></table></figure>- 不使用pre转义字符不起作用</code></pre></li><li><p>未定义值undefined和特殊数字常量NaN通常在数据类型转换后出现，因为其他的类型无法识别</p></li><li><p>空值null 注意不能等同于空字符串或者0</p></li></ul><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><ul><li>加减乘除</li><li>自增和自减（++，–）</li><li>求模</li></ul><h2 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h2><ul><li>大于小于大于等于小于等于</li><li>== 不判断数据类型，仅判断表面值</li><li>=== 绝对等于    判断数据类型和表面值</li><li>!=    不判断数据类型，仅判断表面值</li><li>!== 不绝对等于    判断数据类型和表面值</li></ul><h2 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h2><ul><li>= 赋值</li><li>+= </li><li>-=</li><li>*=</li><li>/=</li><li>%=</li><li>&amp;= 逻辑与</li><li>|= 逻辑或</li><li>^= 逻辑异或 a^=b 相当于 a = a^b</li></ul><h2 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h2><table><thead><tr><th align="left">逻辑运算符</th><th>描述</th></tr></thead><tbody><tr><td align="left">!</td><td>取反</td></tr><tr><td align="left">&amp;=</td><td>与之后赋值</td></tr><tr><td align="left">&amp;</td><td>逻辑与</td></tr><tr><td align="left">竖线=</td><td>或之后赋值</td></tr><tr><td align="left">竖线</td><td>逻辑或</td></tr><tr><td align="left">^=</td><td>异或之后赋值</td></tr><tr><td align="left">^</td><td>逻辑异或</td></tr><tr><td align="left">?:</td><td>三目运算符</td></tr><tr><td align="left">双竖线</td><td>或运算符</td></tr><tr><td align="left">==</td><td>等于运算符</td></tr><tr><td align="left">!=</td><td>不等于运算符</td></tr></tbody></table><h2 id="位运算符"><a href="#位运算符" class="headerlink" title="位运算符"></a>位运算符</h2><table><thead><tr><th>位运算符</th><th>描述</th></tr></thead><tbody><tr><td>&amp;</td><td>与运算符</td></tr><tr><td>竖线</td><td>或运算符</td></tr><tr><td>^</td><td>异或运算符</td></tr><tr><td>~</td><td>非运算符</td></tr><tr><td>左尖括号两个</td><td>左移</td></tr><tr><td>右尖括号两个</td><td>带符号右移</td></tr><tr><td>右尖括号三个</td><td>填0右移</td></tr></tbody></table><h2 id="typeof-运算符"><a href="#typeof-运算符" class="headerlink" title="typeof 运算符"></a>typeof 运算符</h2><ul><li>返回数据类型<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alert(typeof a);</span><br></pre></td></tr></table></figure></li></ul><h2 id="new-运算符"><a href="#new-运算符" class="headerlink" title="new 运算符"></a>new 运算符</h2><ul><li>创建一个新对象<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">new construct[(argument)]</span><br><span class="line">construct 构造函数</span><br><span class="line">argument 参数，可以无参</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git1</title>
      <link href="/2019/08/07/git1/"/>
      <url>/2019/08/07/git1/</url>
      
        <content type="html"><![CDATA[<h1 id="git"><a href="#git" class="headerlink" title="git"></a>git</h1><h2 id="git的作用"><a href="#git的作用" class="headerlink" title="git的作用"></a>git的作用</h2><ul><li>版本控制</li><li>多人开发协作方便<ul><li>协同修改</li><li>数据备份</li><li>版本管理</li><li>权限控制</li><li>历史记录</li><li>分支管理</li></ul></li></ul><h2 id="版本控制"><a href="#版本控制" class="headerlink" title="版本控制"></a>版本控制</h2><ul><li>集中式的版本控制工具<ul><li>SVN  存在服务器上</li><li>可能单点故障</li></ul></li><li>分布式的版本控制<ul><li>git 每台电脑都有一个版本库</li><li>解决单点故障问题</li></ul></li></ul><h2 id="git优势"><a href="#git优势" class="headerlink" title="git优势"></a>git优势</h2><ul><li>本地运行不需要联网</li><li>完整性保证</li><li>尽可能添加数据而不是删除ｏｒ修改数据</li><li>分支操作非常快</li><li>linux命令全面兼容</li></ul><h2 id="git分区"><a href="#git分区" class="headerlink" title="git分区"></a>git分区</h2><h3 id="工作区"><a href="#工作区" class="headerlink" title="工作区"></a>工作区</h3><ul><li>写代码</li></ul><h3 id="暂存区"><a href="#暂存区" class="headerlink" title="暂存区"></a>暂存区</h3><ul><li>临时储存</li></ul><h3 id="本地库"><a href="#本地库" class="headerlink" title="本地库"></a>本地库</h3><ul><li>历史版本</li></ul><h2 id="git和代码托管中心"><a href="#git和代码托管中心" class="headerlink" title="git和代码托管中心"></a>git和代码托管中心</h2><h3 id="代码托管中心"><a href="#代码托管中心" class="headerlink" title="代码托管中心"></a>代码托管中心</h3><ul><li>为了维护远程库 </li><li>局域网<ul><li>GitLab服务器</li></ul></li><li>外网<ul><li>GitHub</li><li>码云</li></ul></li></ul><h3 id="本地库和远程库"><a href="#本地库和远程库" class="headerlink" title="本地库和远程库"></a>本地库和远程库</h3><ul><li>本地库-远程库 push </li><li>远程库-本地库 clone</li><li>远程库1-远程库2 fork 相当于复制远程库1中的内容到远程库2中</li><li>远程库2-远程库1 pullrequest-审核-merge 将远程库2中更新的内容经过远程库1拥有者审核后合并进来</li></ul><h2 id="git命令行操作"><a href="#git命令行操作" class="headerlink" title="git命令行操作"></a>git命令行操作</h2><h3 id="本地库初始化"><a href="#本地库初始化" class="headerlink" title="本地库初始化"></a>本地库初始化</h3><ul><li>命令：git init </li><li>效果：创建了一个.git的隐藏目录</li><li>注意：.git 目录中存放的是本地库相关的目录和文件，不能删除和乱改</li></ul><h3 id="设置签名"><a href="#设置签名" class="headerlink" title="设置签名"></a>设置签名</h3><ul><li>形式<ul><li>用户名 tom</li><li>Email <a href="mailto:goodmorning@adfa.com" target="_blank" rel="noopener">goodmorning@adfa.com</a></li></ul></li><li>区分不同版本开发人员的身份</li><li>辨析： 这里设置的签名和登录代码托管中心的账号密码无关</li><li>命令： <ul><li>项目级别/仓库级别：仅在当前本地库有效        <ul><li>git config user.name tom</li><li>git config user.email <a href="mailto:adsfa@asdfa.com" target="_blank" rel="noopener">adsfa@asdfa.com</a></li><li>存储位置 仓库地址/.git/config文件中user节点处</li></ul></li><li>系统用户级别：在本系统的系统用户范围有效        <ul><li>git config –global user.name tom_administrator</li><li>git config –global user.email <a href="mailto:tom_administrator@afasa.com" target="_blank" rel="noopener">tom_administrator@afasa.com</a></li><li>储存位置 ~/.gitconfig中user节点中</li></ul></li><li>优先级： <ul><li>就近原则：项目级别优先于系统用户级别，二者都有项目级别签名优先采用</li><li>不允许二者都没有</li></ul></li></ul></li><li>项目级别用户存放位置 cat .git/config</li><li>系统用户级别用户存放位置    <ul><li>cd ~</li><li>pwd</li><li>ls -la|less    显示隐藏文件并分页显示</li><li>查看 .gitconfig    </li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linuxbasic5</title>
      <link href="/2019/08/06/linuxbasic5/"/>
      <url>/2019/08/06/linuxbasic5/</url>
      
        <content type="html"><![CDATA[<h1 id="服务器介绍"><a href="#服务器介绍" class="headerlink" title="服务器介绍"></a>服务器介绍</h1><p>##　服务器介绍</p><ul><li>按高度计算，单位为Ｕ</li><li>刀片服务器，高可用高密度，热插拔</li><li>塔式服务器，用处较少</li><li>云服务器是未来</li></ul><h2 id="高并发服务器"><a href="#高并发服务器" class="headerlink" title="高并发服务器"></a>高并发服务器</h2><ul><li>优先把数据传入内存，速度快。缺点宕机丢数据</li><li>解决缺点方法：<ul><li>多路供电</li><li>保证供电 </li></ul></li><li>高并发读写处理类似操作系统中的快表，常用的放在内存中，读取快速，不常用放硬盘</li><li>buffer（缓冲区）数据进内存</li><li>cache（缓存区）内存读数据</li></ul><h2 id="阵列卡（RAID卡）"><a href="#阵列卡（RAID卡）" class="headerlink" title="阵列卡（RAID卡）"></a>阵列卡（RAID卡）</h2><ul><li>未完后补</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tmux_vim</title>
      <link href="/2019/08/04/tmux-vim/"/>
      <url>/2019/08/04/tmux-vim/</url>
      
        <content type="html"><![CDATA[<h1 id="tmux"><a href="#tmux" class="headerlink" title="tmux"></a>tmux</h1><h2 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h2><ul><li>tnew = “tmux new -s”</li><li>基本没有说什么，之后再搜索课程进行补充</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> tmux, vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vimbasic6</title>
      <link href="/2019/08/03/vimbasic6/"/>
      <url>/2019/08/03/vimbasic6/</url>
      
        <content type="html"><![CDATA[<h1 id="vim插件"><a href="#vim插件" class="headerlink" title="vim插件"></a>vim插件</h1><h2 id="nerdtree"><a href="#nerdtree" class="headerlink" title="nerdtree"></a>nerdtree</h2><ul><li>目录插件</li><li>github搜索获取</li><li>leaderev+Plug ‘github目录’</li><li>leadersv+PlugInstall</li><li>开vim自启动,autocmd vimenter * NERDTree</li><li>开关目录快捷键设置nnoremap <leader>n :NERDTreeTOggle<cr></cr></leader></li><li>打开文件所在目录位置 快捷键设置为 <leader>f :NERDTreeFind<cr></cr></leader></li></ul><h2 id="vim-markdown插件"><a href="#vim-markdown插件" class="headerlink" title="vim-markdown插件"></a>vim-markdown插件</h2><ul><li>折叠相关<ul><li>zo打开</li><li>zc关闭</li><li>zR解开全部折叠</li></ul></li></ul><h2 id="easymotion插件"><a href="#easymotion插件" class="headerlink" title="easymotion插件"></a>easymotion插件</h2><ul><li>功能快速跳转</li><li>快捷键ss</li><li>搜索之后光标快速移动到指定位置，相较于vim本身的斜杠更好用</li><li>ss功能只能搜索到显示能看到的地方，不知道为啥，但是可以用来快速定位光标到所见未知也是不错的</li></ul><h2 id="ctrlp插件"><a href="#ctrlp插件" class="headerlink" title="ctrlp插件"></a>ctrlp插件</h2><ul><li>快捷键ctrlp模糊搜索文件</li></ul><h2 id="instant-markdown"><a href="#instant-markdown" class="headerlink" title="instant-markdown"></a>instant-markdown</h2><ul><li>这个用不了，npm安装后，配置文件中找不到要用的插件位置</li></ul><h2 id="vimsurround-更改成对出现的符号"><a href="#vimsurround-更改成对出现的符号" class="headerlink" title="vimsurround 更改成对出现的符号"></a>vimsurround 更改成对出现的符号</h2><ul><li>cs 将成对符号更改<ul><li>例 cs’” 将单引号改为双引号</li></ul></li><li>ys <ul><li>例 ysiw” 将这个单词加双引号 </li></ul></li><li>ds<ul><li>例 ds”  删除双引号</li></ul></li><li>安装过程<ul><li>github搜索安装即可，同上</li></ul></li></ul><h2 id="fzf-vim模糊搜索"><a href="#fzf-vim模糊搜索" class="headerlink" title="fzf.vim模糊搜索"></a>fzf.vim模糊搜索</h2><ul><li><a href="https://github.com/junegunn/fzf.vim" target="_blank" rel="noopener">fzf.vim</a> 参考官方文档的command</li><li>常用命令<ul><li>Ag[PATTERN]模糊搜索字符串,这个功能不会用！</li><li>Files[PATH]模糊搜索目录</li></ul></li></ul><h2 id="far-vim搜索替换插件"><a href="#far-vim搜索替换插件" class="headerlink" title="far.vim搜索替换插件"></a>far.vim搜索替换插件</h2><ul><li>:Far 被替换词 替换词 \<em>*/</em> <ul><li>\**表示上层目录所有文件类型</li><li>\*表示当前目录所有文件类型</li><li>回车后会生成预览文件，没问题就可以替换</li></ul></li><li>预览文件没问题需要执行Fardo命令进行替换</li></ul><h2 id="vim-go"><a href="#vim-go" class="headerlink" title="vim-go"></a>vim-go</h2><ul><li>已经预装了，所以没有装，但是这台linux上没有golang的运行环境需要自己安装</li></ul><h2 id="python-mode打造轻量级PythonIDE"><a href="#python-mode打造轻量级PythonIDE" class="headerlink" title="python-mode打造轻量级PythonIDE"></a>python-mode打造轻量级PythonIDE</h2><ul><li>需要注意的是安装库可能会花些时间</li><li>:help pymode 查询帮助信息,注意设置了打开文件类型，只有Python文件才可以打开插件</li></ul><ul><li>Support Python version 2.6+ and 3.2+</li><li>Syntax highlighting</li><li>Virtualenv support</li><li>Run python code (<leader>r)-    </leader></li><li>Add/remove breakpoints (<leader>b)-    </leader></li><li>Improved Python indentation-     </li><li>Python motions and operators (]], 3[[, ]]M, vaC, viM, daC, ciM, …)-    </li><li>Improved Python folding-     </li><li>Run multiple code checkers simultaneously (:PymodeLint)-    </li><li>Autofix PEP8 errors (:PymodeLintAuto)-    </li><li>Search in python documentation (<leader>K)-    </leader></li><li>Code refactoring-    </li><li>Intellisense code-completion-     </li><li>Go to definition (<c-c>g)-    </c-c></li><li>And more, more …- - </li></ul><h2 id="vim-tagbar"><a href="#vim-tagbar" class="headerlink" title="vim tagbar"></a>vim tagbar</h2><ul><li>安装前需要先安装ctag</li><li>同样的插件github安装</li><li>更改配置文件快速切换<ul><li>nnoremap <leader>tb :TagbarToggle<cr></cr></leader></li></ul></li></ul><h2 id="vim-interestingwords"><a href="#vim-interestingwords" class="headerlink" title="vim-interestingwords"></a>vim-interestingwords</h2><ul><li>高亮单词</li><li>找到需要高亮的单词<leader>k,全文高亮需要单词</leader></li><li><leader>K,用于高亮需要单词</leader></li></ul><h2 id="deoplete-nvim"><a href="#deoplete-nvim" class="headerlink" title="deoplete.nvim"></a>deoplete.nvim</h2><ul><li>实现代码补全功能</li><li><c-xo>代码补全 </c-xo></li></ul><h2 id="coc-vim"><a href="#coc-vim" class="headerlink" title="coc.vim"></a>coc.vim</h2><ul><li>实现代码补全未安装，但是推荐说是很好用</li></ul><h2 id="代码格式检查"><a href="#代码格式检查" class="headerlink" title="代码格式检查"></a>代码格式检查</h2><ul><li>自动格式化</li><li>静态检查</li></ul><h3 id="Neoformat"><a href="#Neoformat" class="headerlink" title="Neoformat"></a>Neoformat</h3><ul><li>这个插件有问题啊，没办法格式化，就算安装autopep8，也没办法格式化python代码</li></ul><h3 id="vim-autoformat"><a href="#vim-autoformat" class="headerlink" title="vim-autoformat"></a>vim-autoformat</h3><ul><li>相较于Neoformat这个更好用，刚开始也出现了无法使用的问题，解决方法不用pip安装autopep8，改用sudo apt install python-autopep8 </li><li>上面的Neoformat用了之后可以使用，但是有些缩进仍不规范</li></ul><h3 id="静态检查"><a href="#静态检查" class="headerlink" title="静态检查"></a>静态检查</h3><ul><li>neomake</li><li>ale<ul><li>可以参考官方文档自定义检查功能，让报的错少些</li></ul></li></ul><h2 id="快速注释"><a href="#快速注释" class="headerlink" title="快速注释"></a>快速注释</h2><ul><li>vim-commentary<ul><li>gcc使用</li><li>gcgc取消</li><li>多行也是gc注释和取消</li></ul></li></ul><h2 id="git相关插件"><a href="#git相关插件" class="headerlink" title="git相关插件"></a>git相关插件</h2><h3 id="Fugitive"><a href="#Fugitive" class="headerlink" title="Fugitive"></a>Fugitive</h3><ul><li>在vim里使用git</li></ul><h3 id="vim-gitgutter"><a href="#vim-gitgutter" class="headerlink" title="vim-gitgutter"></a>vim-gitgutter</h3><ul><li>显示git文件变动</li></ul><h3 id="gv-vim"><a href="#gv-vim" class="headerlink" title="gv.vim"></a>gv.vim</h3><ul><li>查看命令行git项目提交记录</li><li>:GV 即可打开gitbrowser</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vimbasic5</title>
      <link href="/2019/07/31/vimbasic5/"/>
      <url>/2019/07/31/vimbasic5/</url>
      
        <content type="html"><![CDATA[<h1 id="vim配置"><a href="#vim配置" class="headerlink" title="vim配置"></a>vim配置</h1><h2 id="noremap"><a href="#noremap" class="headerlink" title="noremap"></a>noremap</h2><ul><li>无递归配置使用<c-u> 将一个带有下划线单词改为全大写 并回到insertmode<esc>viwU<esc>i</esc></esc></c-u></li><li>通过手动配置vim比插件更容易记忆自己配置过什么，并且可以快速定位配置位置修改，注意使用noremap用于设置防止与插件冲突</li></ul><h2 id="编辑时修改vimrc"><a href="#编辑时修改vimrc" class="headerlink" title="编辑时修改vimrc"></a>编辑时修改vimrc</h2><ul><li>例子:nnoremap <leader>ev :vsplit $MYVIMRC<cr>    以上代码可以通过leader键加ev实现纵向分屏打开配置文件，并直接添加某个映射到vimrc文件中, 命令中的<cr>相当于回车等同于执行命令。</cr></cr></leader></li><li>之后nnoremap <leader>sv :source $MYVIMRC<cr>    可以重读配置文件使刚刚的配置生效，按leader键加sv即可</cr></leader></li></ul><h2 id="自定义纠错"><a href="#自定义纠错" class="headerlink" title="自定义纠错"></a>自定义纠错</h2><ul><li>:iabbrev mlfalcon lmfalcon  将错误的拼写改为正确的拼写</li><li>可以在insert，command，replace 三个模式下生效</li><li>inoremap 会在任意时候更换错误拼写，而iabbrev 只会在前后字符非字母时进行替换</li></ul><h2 id="localleader-or-leader"><a href="#localleader-or-leader" class="headerlink" title="localleader or leader"></a>localleader or leader</h2><ul><li>localleader更适合做插件给他人使用的时候设置，这样具有更好的可移植性</li><li>leader自己使用时设置就好了，这样自己可以熟悉使用leader按键。</li></ul><h2 id><a href="#" class="headerlink" title></a><buffer></buffer></h2><ul><li>nnoremap <buffer> <leader>x dd    这个设置只会在进行这个设置文件中生效其他文件不会拥有这个缓冲区，所以不会生效</leader></buffer></li><li>localleader 可以使用特定缓冲区</li><li>如果在一个文件的缓冲区设置了相同按键的两个指令一个有<buffer>另一个没有，结果只会执行有<buffer>的指令</buffer></buffer></li></ul><h2 id="setlocal"><a href="#setlocal" class="headerlink" title="setlocal"></a>setlocal</h2><ul><li>这个命令只会在当前的文件生效</li><li>例如:setlocal nowrap 只会在当前文件不折叠</li></ul><h2 id="autocmd"><a href="#autocmd" class="headerlink" title="autocmd"></a>autocmd</h2><ul><li>如果建立一个文件后未保存退出，vim默认不会帮你创建文件</li><li>修改方法 autocmd BufNewFile * :write 自动命令会自动执行，bufNewFile是创建新文件，*是任意文件名的通配符，：write 是写入保存。这个命令会在你创建文件时执行并保存</li><li>autocmd BufWritePre *.html :normal gg=G 可以将BufWritePre 将在保存任何字符前触发:normal gg=G 将html文件的格式改为和第一行的相同，即所有行都没有缩进</li><li>autocmd BufNewFile,BufRead *.html setlocal nowrap 这个命令的作用是将编辑html文件的换行取消。</li><li>autocmd FileType javascript nnoremap <buffer> <localleader>c I//<esc> 在处理javascript文件时将用localleader加ｃ注释掉当前光标所在行</esc></localleader></buffer></li><li>autocmd FileType Python nnoremap <buffer> <localleader>c I#<esc>作用类似上面的注释方法</esc></localleader></buffer></li></ul><h3 id="自动命令和缩写"><a href="#自动命令和缩写" class="headerlink" title="自动命令和缩写"></a>自动命令和缩写</h3><ul><li>自动命令搭配纠错可以通过缩写实现自动补全</li><li>例： autocmd FileType javascript :iabbrev <buffer> iff if:<left>autocmd FileType Python :iabbrev <buffer> iff if()<left>    这样就通过iff实现了自动补全功能</left></buffer></left></buffer></li></ul><p>###　自动执行组</p><ol><li>:augroup testgroup</li><li>:autocmd BufWrite * :echom “Foo”</li><li>:autocmd BufWrite * :echom “Bar”</li><li>:augroup END</li></ol><ul><li>顺序执行完上面步骤保存会打印Foo,但是不会打印Bar.如果继续在相同的组添加指令Bar也会出现，但是新指令不出现。</li><li>在组中添加:autocmd!后可以清楚之前创建的所有指令，但是这条指令后添加其他指令，其他的指令依然会执行，说明组仍存在未完全清除。只有单独添加:autocmd!才会清除整个组</li></ul><h2 id="Operator-Pending映射"><a href="#Operator-Pending映射" class="headerlink" title="Operator-Pending映射"></a>Operator-Pending映射</h2><ul><li>在normalmode下使用</li><li>Operator 是操作<ul><li>d 删除</li><li>c （change)修改</li><li>y 复制</li></ul></li><li>Movement 是移动范围<ul><li>w        到下一个单词 </li><li>i(    i==inside，在括号内 </li><li>in(    移动到下一个(n==nex)t的括号内</li><li>il(    移动到上一个括号内，l==last</li><li>t,    到逗号</li><li>F)    向后移动到最近的）字符</li><li>vi(    进入可视模式选中括号内的所有内容</li></ul></li><li>可以组合上面的O-M语句实验效果</li></ul><h3 id="Movement-映射修改创建"><a href="#Movement-映射修改创建" class="headerlink" title="Movement 映射修改创建"></a>Movement 映射修改创建</h3><ul><li>:onoremap p i( 将p改为进入括号中，normalmode中使用dp即可将括号内的语句删除</li><li>:onoremap 自定义按键 /希望搜索的字符</li><li></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vimplug</title>
      <link href="/2019/07/30/vimplug/"/>
      <url>/2019/07/30/vimplug/</url>
      
        <content type="html"><![CDATA[<h1 id="vim插件"><a href="#vim插件" class="headerlink" title="vim插件"></a>vim插件</h1><h2 id="vim的插件管理工具vim-plug"><a href="#vim的插件管理工具vim-plug" class="headerlink" title="vim的插件管理工具vim-plug"></a>vim的插件管理工具vim-plug</h2><ul><li>github上搜索可找到安装</li><li>安装后github上还有具体的配置方法</li><li>修改好.vimrc后即可使用</li><li>添加插件    plug ‘插件名称’</li><li>保存配置文件,:source .vim/vimrc使用配置</li><li>保存配置文件后还是要重启vim编辑器才能安装插件</li><li>:PlugInstall 安装插件，等待安装完成重启</li></ul><h2 id="vim插件搜索方法"><a href="#vim插件搜索方法" class="headerlink" title="vim插件搜索方法"></a>vim插件搜索方法</h2><ul><li>Google</li><li><a href="https://vimawesome.com/" target="_blank" rel="noopener">https://vimawesome.com/</a></li><li>网上搜索别人的开源配置借鉴别人的插件</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> vim, vimplug </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vimbasic4</title>
      <link href="/2019/07/29/vimbasic4/"/>
      <url>/2019/07/29/vimbasic4/</url>
      
        <content type="html"><![CDATA[<h1 id="vim补全"><a href="#vim补全" class="headerlink" title="vim补全"></a>vim补全</h1><h2 id="单词补全"><a href="#单词补全" class="headerlink" title="单词补全"></a>单词补全</h2><ul><li>ctrl + n 和ctrl + p 补全单词</li></ul><h2 id="路径补全"><a href="#路径补全" class="headerlink" title="路径补全"></a>路径补全</h2><ul><li>ctrl + x 和 ctrl + f 补全文件名</li></ul><h2 id="代码补全，需插件识别代码"><a href="#代码补全，需插件识别代码" class="headerlink" title="代码补全，需插件识别代码"></a>代码补全，需插件识别代码</h2><ul><li>ctrl + x 和 ctrl + o 补全代码，需要开启文件类型检查，安装插件</li></ul><h1 id="vim配色更改"><a href="#vim配色更改" class="headerlink" title="vim配色更改"></a>vim配色更改</h1><ul><li>查询当前配色colorscheme</li><li>可用的所有配色 colorscheme <c-d></c-d></li><li>colorscheme 加配色名修改配色</li><li>github中搜索colorscheme即可找到合适配色方案安装即可</li></ul><h1 id="裸vim学习"><a href="#裸vim学习" class="headerlink" title="裸vim学习"></a>裸vim学习</h1><ul><li>直接适应裸vim的操作之后不管是在其他IDE中使用VIM都会很方便</li><li>练习盲打很重要，形成肌肉记忆，快速适应新的编辑器用法</li><li>既然能存在这么多年说明vim肯定有他的优势熟练使用会在linux系统熟练操作上有很多好处</li><li>键盘既然已经改了按键这样一定要尽快适应按键的位置，例如更改esc和caps的位置要尽快熟练这两个位置的更换，加快vim各种模式的切换</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vimbasic3</title>
      <link href="/2019/07/28/vimbasic3/"/>
      <url>/2019/07/28/vimbasic3/</url>
      
        <content type="html"><![CDATA[<h1 id="vim基本用法3"><a href="#vim基本用法3" class="headerlink" title="vim基本用法3"></a>vim基本用法3</h1><h2 id="文本操作"><a href="#文本操作" class="headerlink" title="文本操作"></a>文本操作</h2><ul><li>[number]<command>[text object]<ul><li>number 次数</li><li>command 命令，d(elete),c(hange),y(ank)</li><li>text object 文本对象，单词w，句子s,段落p</li></ul></li><li>vaw 改变括号，引号等被包裹起来的所有词包括空格</li><li>viw 改变包裹起来的所有词不包括结尾的空格</li></ul><h2 id="复制粘贴"><a href="#复制粘贴" class="headerlink" title="复制粘贴"></a>复制粘贴</h2><ul><li>设置了autoindent，可能导致代码缩进错乱<ul><li>解决方式用:set paste和:set nopaste</li><li>可以用插件直接解决</li></ul></li><li>使用xp可以快速调换两个字符</li></ul><h3 id="vim使用无名寄存器用于保存复制内容"><a href="#vim使用无名寄存器用于保存复制内容" class="headerlink" title="vim使用无名寄存器用于保存复制内容"></a>vim使用无名寄存器用于保存复制内容</h3><ul><li>“指定寄存器名，不指定为默认的无名寄存器</li><li>“ayiw 复制一个单词到寄存器a中，”bdd 删除当前行到b寄存器中</li><li>“”表示无名寄存器</li></ul><h3 id="各类寄存器"><a href="#各类寄存器" class="headerlink" title="各类寄存器"></a>各类寄存器</h3><ul><li>“0 复制专用寄存器</li><li>“+ 复制到系统剪贴板</li><li>:echo has(‘clipboard’)查看是否有这个，1表示有，0表示无</li><li>貌似直接<c-sh-v>可以复制系统剪贴版的内容到vim中即使是python文件也没有问题</c-sh-v></li><li></li></ul><h2 id="宏"><a href="#宏" class="headerlink" title="宏"></a>宏</h2><ul><li>q 用于录制和退出</li></ul><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><ul><li>将下面的操作全部变成列表</li><li>用qa命令开始录制并将录制结果保存在a寄存器中</li><li>成功后出现recording @a </li><li>按i进入插入模式</li><li>输入-加空格</li><li>此时结束录制，底端的recording @a也会消失</li><li>按V行选择</li><li>按G直接选择至尾行</li><li>按:发现左下角出现’&lt;,’&gt;</li><li>输入normal @a</li><li>完成列表</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linuxbasic3</title>
      <link href="/2019/07/27/linuxbasic4/"/>
      <url>/2019/07/27/linuxbasic4/</url>
      
        <content type="html"><![CDATA[<h1 id="linux-命令"><a href="#linux-命令" class="headerlink" title="linux 命令"></a>linux 命令</h1><ul><li>evince PDF文档名 阅读PDF文档</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vimbasic2</title>
      <link href="/2019/07/27/vimbasic2/"/>
      <url>/2019/07/27/vimbasic2/</url>
      
        <content type="html"><![CDATA[<h1 id="vim配置"><a href="#vim配置" class="headerlink" title="vim配置"></a>vim配置</h1><h2 id="vimrc配置文件更改"><a href="#vimrc配置文件更改" class="headerlink" title=".vimrc配置文件更改"></a>.vimrc配置文件更改</h2><ul><li>map 按键1 按键2 </li><li>特殊按键要<space>，组合键<c-d></c-d></space></li><li>对应三个模式下的映射(不推荐)<ul><li>nmap normal</li><li>imap insert</li><li>vmap visual</li></ul></li><li>上种映射存在冲突可能，以下方式较好<ul><li>nnoremap</li><li>inoremap</li><li>vnoremap</li></ul></li><li>“ 表示注释，配置最好做好注释防止忘记对应功能</li><li>设置leader键<ul><li>let mapleader = “,” 常用逗号或者空格</li></ul></li><li>noremap 按键1 按键2    将按键一改为按键二</li><li>map S :w<cr>            将大写S改为一键保存,CR表示Command模式</cr></li><li>map Q :q<cr>            将大写Q改为一键退出</cr></li><li>map R :source $MYVIMRC<cr> 一键修改设置</cr></li><li>syntax on                语法高亮 </li><li>set number or nonuber        更改是否显示行号</li><li>set norelativenumber    or relativenuber 更改行号是否关联</li><li>map s <nop> 取消s按键在命令模式下替换功能</nop></li><li>set cursorline    下划线显示所编辑行</li><li>set wrap            </li><li>set showcmd        </li><li>set wildmenu        自动补全命令</li><li>set pastetoggle=<f2> F2进入粘贴模式</f2></li><li>set hlsearch    设置高亮搜索</li><li>set foldmethod=indent    设置折叠方式</li><li>“一些方便的映射<ul><li>let mapleader=’,’</li><li>let g:mapleader= ‘,’</li></ul></li><li>inoremap jj <esc>`^    使用jj进入normal模式</esc></li><li>“使用leader+ w 直接保存（感觉还是大写S好用，但是vim中w是保存为了养成习惯一定要强迫自己使用leader键加w来保存）<ul><li>inoremap <leader>w <esc>:w<cr></cr></esc></leader></li><li>noremap <leader>w :w<cr></cr></leader></li></ul></li><li>“切换buffer<ul><li>nnoremap <silent> [b :bprevious<cr></cr></silent></li><li>nnoremap <silent> [n :bnext<cr></cr></silent></li></ul></li><li>“use ctrl+hjkl switch window<ul><li>noremap <c-h> <c-w>h</c-w></c-h></li><li>noremap <c-j> <c-w>j</c-w></c-j></li><li>noremap <c-k> <c-w>k</c-w></c-k></li><li>noremap <c-l> <c-w>l</c-w></c-l></li></ul></li><li>“使用:h option-list 来看配置的各个符号具体功能</li><li>“sudo to write<ul><li>cnoremap w!! w !sudo tee % &gt;/dev/null</li></ul></li><li>“ json 格式化<ul><li>com! FormatJSON %!python3 -m json.tool</li></ul></li><li>笨方法学Vimscript 百度搜索电子书来看，里面有详细的配置方法</li></ul><h2 id="分屏设置"><a href="#分屏设置" class="headerlink" title="分屏设置"></a>分屏设置</h2><ul><li><c-w> 用于分屏<c-w>表示Ctrl + w,不能直接分屏，只用于切换</c-w></c-w></li><li><c-w>w 用于分屏间的切换</c-w></li><li><c-w>l 用于分屏间互换位置</c-w></li><li><c-w>= 用于分屏,所有窗口等高</c-w></li><li><c-w>_ 用于分屏,当前窗口最大化活动高度</c-w></li><li>[N]<c-w> 用于分屏,高度设为N</c-w></li><li>[N]<c-w>l 用于分屏,纵向高度设为N</c-w></li><li>:sp 横向分屏</li><li>:vs 纵向分屏</li></ul><h2 id="标签页设置"><a href="#标签页设置" class="headerlink" title="标签页设置"></a>标签页设置</h2><ul><li>:h tabpage了解tap的相关用法，相当于设置工作区，全部用于存储同一文件类型</li><li>:tabnew 用于打开新的工作区</li><li>gt 用于不同的工作区之间的切换</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vimbasic1</title>
      <link href="/2019/07/26/vimbasic1/"/>
      <url>/2019/07/26/vimbasic1/</url>
      
        <content type="html"><![CDATA[<h1 id="vim基本操作"><a href="#vim基本操作" class="headerlink" title="vim基本操作"></a>vim基本操作</h1><hr><h2 id="插入模式"><a href="#插入模式" class="headerlink" title="插入模式"></a>插入模式</h2><ul><li>I 在行首并开始插入模式</li><li>A 在行尾并开始插入模式</li><li>O 在上一行并开始插入模式 </li><li>o 在下一行并开始插入模式</li></ul><hr><h2 id="命令模式"><a href="#命令模式" class="headerlink" title="命令模式"></a>命令模式</h2><ul><li>H 光标回到文章开头</li><li>L 光标回到文章末尾</li><li>ctrl + s 在bash中是锁屏快捷键，vim中无法使用</li><li>Ctrl + q 在bash中可以解锁屏</li><li>ctrl + { 上一段</li><li>Ctrl + } 下一段</li><li>gg 为移动至开头</li><li>numG num表示移动的行号</li><li>G 为移动到行尾</li><li>dd 为删除所在行</li><li>num dd 为删除num行</li><li>d0 删除光标前本行所有内容</li><li>D 删除光标后本行所有内容，包含光标位置字符</li><li>dw 删除光标所在单词</li><li>x 删除光标所在字符</li><li>X 删除光标前字符</li><li>u 撤销操作</li><li>ctrl + r 反撤销（重做）</li><li>. 重复上一次指令</li><li><blockquote><blockquote><p>文本行右移动</p></blockquote></blockquote></li><li>&lt;&lt; 文本行左移动</li><li>yy 复制本行</li><li>nyy 复制n行</li><li>p 粘贴</li><li>r 替换当前字符</li><li>R 替换模式，替换光标字符直到esc</li></ul><hr><h2 id="末行模式"><a href="#末行模式" class="headerlink" title="末行模式"></a>末行模式</h2><ul><li>: 进入末行模式</li><li>/ + 查找内容<ul><li>n 查找下一个</li><li>N 查找上一个</li></ul></li><li>:[range]s/{pattern}/{string}/{flags}    <ul><li>flags<ul><li>g 全局替换</li><li>c 确认提换</li><li>n 匹配到的次数    </li></ul></li></ul></li><li>%s/abc/123/g 文本中所有abc替换为123，不加g只替换首个</li><li>1,10s/abc/123/g 文本中1-10行的abc替换为123</li><li>q 退出不保存</li><li>x or wq 退出并保存</li><li>w 保存</li><li>q! 强制退出</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linuxbasic3</title>
      <link href="/2019/07/26/linuxbasic3/"/>
      <url>/2019/07/26/linuxbasic3/</url>
      
        <content type="html"><![CDATA[<h1 id="linux基本指令"><a href="#linux基本指令" class="headerlink" title="linux基本指令"></a>linux基本指令</h1><h2 id="sudo-su-切换到root"><a href="#sudo-su-切换到root" class="headerlink" title="sudo su    切换到root"></a>sudo su    切换到root</h2><ul><li>按ctrl + D 退出</li></ul><h2 id="sudo-临时提升为root权限"><a href="#sudo-临时提升为root权限" class="headerlink" title="sudo 临时提升为root权限"></a>sudo 临时提升为root权限</h2><ul><li>只能提升当前指令权限</li></ul><h2 id="su-用户名-切换不同用户"><a href="#su-用户名-切换不同用户" class="headerlink" title="su 用户名    切换不同用户"></a>su 用户名    切换不同用户</h2><h2 id="passwd-默认修改当前用户密码"><a href="#passwd-默认修改当前用户密码" class="headerlink" title="passwd 默认修改当前用户密码"></a>passwd 默认修改当前用户密码</h2><ul><li>需要用root用户修改密码，普通用户有限制，root可将密码改短</li></ul><h2 id="exit-用于退出当前用户，回到上一个登录用户"><a href="#exit-用于退出当前用户，回到上一个登录用户" class="headerlink" title="exit 用于退出当前用户，回到上一个登录用户"></a>exit 用于退出当前用户，回到上一个登录用户</h2><h2 id="who-查看当前用户"><a href="#who-查看当前用户" class="headerlink" title="who 查看当前用户"></a>who 查看当前用户</h2><ul><li>-q 查看当前登录人数</li><li>-u 查看最后一次操作时间</li></ul><h2 id="重启和关机"><a href="#重启和关机" class="headerlink" title="重启和关机"></a>重启和关机</h2><ul><li>shutdown <ul><li>now 立刻关机</li><li>r 重启</li><li>c 取消</li><li>+20 20分钟后关机</li><li>20:25 定时关机</li></ul></li><li>reboot    重启无通知</li></ul><h2 id="软件安装-更新和卸载"><a href="#软件安装-更新和卸载" class="headerlink" title="软件安装,更新和卸载"></a>软件安装,更新和卸载</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><ul><li><p>make install 源代码安装包</p><ol><li>./configure 建立makefile这个文件</li><li>makeclean 清除掉上次编译过的目标文件</li><li>make 依据上一步的操作进行编译，通过gcc生成可执行文件，放在当前文件目录下</li><li>make install 完成最后步骤</li></ol></li><li><p>dpkg 安装deb包</p><ul><li>sudo dpkg -i 软件包名</li></ul></li><li><p>sudo apt install 软件名</p><ul><li>apt-get 功能范围更小，推荐直接apt</li></ul></li></ul><h3 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h3><ul><li>sudo apt update</li></ul><h3 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h3><ul><li>sudo apt remove 软件名</li></ul><hr><h1 id="SSH"><a href="#SSH" class="headerlink" title="SSH"></a>SSH</h1><p>-sudo apt install openssh-server</p><h2 id="链接远程服务器"><a href="#链接远程服务器" class="headerlink" title="链接远程服务器"></a>链接远程服务器</h2><ul><li>ssh 远程服务器用户名@远程服务器IP地址</li><li>IP查询    ifconfig</li></ul><h2 id="远程拷贝"><a href="#远程拷贝" class="headerlink" title="远程拷贝"></a>远程拷贝</h2><h3 id="上传"><a href="#上传" class="headerlink" title="上传"></a>上传</h3><ul><li>scp 需要拷贝的文件的路径 用户名@IP地址：要拷贝到的路径</li></ul><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><ul><li>scp 用户名@IP地址：拷贝文件路径 要拷贝到的路径</li></ul><h3 id="拷贝目录"><a href="#拷贝目录" class="headerlink" title="拷贝目录"></a>拷贝目录</h3><ul><li>scp -r</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> linux， ssh </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>javabasic1</title>
      <link href="/2019/07/26/javabasic1/"/>
      <url>/2019/07/26/javabasic1/</url>
      
        <content type="html"><![CDATA[<h1 id="eclipse常用操作"><a href="#eclipse常用操作" class="headerlink" title="eclipse常用操作"></a>eclipse常用操作</h1><h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><ul><li>使用alt+/可以快速补全</li><li>使用ctrl + alt + 上下箭头可以批量复制代码</li><li>使用ctrl + shift + 上下箭头可以快速跳出大括号层代码并停留在当层标题处or大括号处</li></ul><h2 id="自动补全"><a href="#自动补全" class="headerlink" title="自动补全"></a>自动补全</h2><ul><li>写下main按下快速补全可以快速写main函数语句</li><li>写下sysout快速补全可以写输出语句</li></ul><hr><h1 id="Java简介"><a href="#Java简介" class="headerlink" title="Java简介"></a>Java简介</h1><h2 id="版本"><a href="#版本" class="headerlink" title="版本"></a>版本</h2><ul><li>JavaEE 企业端</li><li>JavaSE 标准版本</li><li>JavaME 小型设备特殊版本</li></ul><h2 id="简称"><a href="#简称" class="headerlink" title="简称"></a>简称</h2><ul><li>jdk 集成开发环境包括jre</li><li>jre 运行环境包括jvm</li><li>jvm Java虚拟机</li></ul><h2 id="基本编程易错及基本库介绍"><a href="#基本编程易错及基本库介绍" class="headerlink" title="基本编程易错及基本库介绍"></a>基本编程易错及基本库介绍</h2><ul><li>python用多了容易漏分号</li><li>a <em>= b + c 等于 a</em>(b+C)赋值给a</li><li>java注释和C++一样是//单行/<strong>/行内/**</strong>/文档注释Python是##</li><li>类名所有单词首字母大写，变量方法则用驼峰原则</li><li>java.awt.*库可用于图形位置控制</li><li>java.swing.JFrame库可以生成图形界面</li><li>java.util.Scanner用于键盘监控</li><li>Math.random()这个方法可以直接使用生成随机数范围[0,1)</li><li>浮点数运算需要精确可以使用BigDecimal方法，尽量用字符串进行初始化相应库为java.Math.BigDecimal</li><li>switch语句jdk1.7后可使用字符串作为判断条件了<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">switch(判断条件)&#123;</span><br><span class="line">case 条件1:</span><br><span class="line">语句1;</span><br><span class="line">break;</span><br><span class="line">case 条件2:</span><br><span class="line">...</span><br><span class="line">default:</span><br><span class="line">语句;</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> javabasic </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>markdown1</title>
      <link href="/2019/07/25/markdown1/"/>
      <url>/2019/07/25/markdown1/</url>
      
        <content type="html"><![CDATA[<h1 id="markdown文件的编辑基本操作"><a href="#markdown文件的编辑基本操作" class="headerlink" title="markdown文件的编辑基本操作"></a>markdown文件的编辑基本操作</h1><p>最近刚开始写技术blog，hexo使用的是.md文本，所以学习一下如何编辑，仅仅记录一些常用的编辑方式<br>开头提醒：markdown中的符号大部分需要与内容之间相隔一个空格否则可能直接显示，而不改变排版</p><hr><p>##标题<br>标题通过井号设置，井号个数代表几级标题<br>示例:</p><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><hr><h2 id="加粗文字用两对星号包起来"><a href="#加粗文字用两对星号包起来" class="headerlink" title="加粗文字用两对星号包起来"></a>加粗文字用两对星号包起来</h2><p>示例<br><strong>这个是加粗的文字</strong></p><h2 id="斜体用一对星号包起来"><a href="#斜体用一对星号包起来" class="headerlink" title="斜体用一对星号包起来"></a>斜体用一对星号包起来</h2><p>示例：<br><em>斜体是不是要写长一点才明显，lean or lie down</em></p><h2 id="之前blog中关于linux重定向问题中用了-gt-gt-两个大于号，这在markdown中是引用，暂时不知道怎么去掉所以分段了"><a href="#之前blog中关于linux重定向问题中用了-gt-gt-两个大于号，这在markdown中是引用，暂时不知道怎么去掉所以分段了" class="headerlink" title="之前blog中关于linux重定向问题中用了&gt;&gt;两个大于号，这在markdown中是引用，暂时不知道怎么去掉所以分段了"></a>之前blog中关于linux重定向问题中用了&gt;&gt;两个大于号，这在markdown中是引用，暂时不知道怎么去掉所以分段了</h2><hr><h2 id="插入链接"><a href="#插入链接" class="headerlink" title="插入链接"></a>插入链接</h2><p>中括号括起来链接名，小括号括起来链接<br><a href="https://lmfalcon.github.io/" target="_blank" rel="noopener">lmfalcon</a></p><h2 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h2><p>！【图片名】（图片未知，可以是网络图片）这里是用中文标点打出来，实际用英文</p><h2 id="插入代码块"><a href="#插入代码块" class="headerlink" title="插入代码块"></a>插入代码块</h2><p>用三个反引号(`)包起来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">public class Code&#123;</span><br><span class="line">public static void main(String[] args)&#123;</span><br><span class="line">System.out.println(&quot;hello world&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>写惯了Python真的很容易漏分号</p><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>可以用数字加点放在开头注意点和内容要用一个空格分隔</p><ol><li>这是一</li><li>这是二</li><li>这是三<br>也可以用单个横线，乘号，加号加在开头<br>如果要嵌套用不同层级间回车加三个空格<br>示例：</li></ol><ul><li>这横线   <ul><li>这是乘号   <ul><li>这是加号</li></ul></li></ul></li></ul><hr><h2 id="空格、缩进"><a href="#空格、缩进" class="headerlink" title="空格、缩进"></a>空格、缩进</h2><p>　改成全角空格ｌｉｎｕｘ使用ｓｈｉｆｔ＋ｓｐａｃｅ变换半角全角</p><hr><h2 id="文献参考"><a href="#文献参考" class="headerlink" title="文献参考"></a>文献参考</h2><p><a href="https://www.jianshu.com/p/191d1e21f7ed" target="_blank" rel="noopener">参考链接</a><br>写得比我全，但是还是要自己打打，试试看看还能不能用</p>]]></content>
      
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linuxbasic2</title>
      <link href="/2019/07/23/linuxbasic2/"/>
      <url>/2019/07/23/linuxbasic2/</url>
      
        <content type="html"><![CDATA[<h1 id="linux基本终端操作"><a href="#linux基本终端操作" class="headerlink" title="linux基本终端操作"></a>linux基本终端操作</h1><h2 id="echo-输出命令"><a href="#echo-输出命令" class="headerlink" title="echo 输出命令"></a>echo 输出命令</h2><p>　　echo “hello world” 终端输出hello world<br>　　echo “hello world” &gt; helloworld.txt<br>　　　　&gt; 重定向至输入至特定位置<br>　　echo “xxxx” &gt;&gt; helloworld.txt<br>　　　　&gt; 再次重定向则覆盖<br>　　　　&gt;&gt;两次重定向会追加</p><h2 id="gt-终端能输出的都能重定向输出"><a href="#gt-终端能输出的都能重定向输出" class="headerlink" title="&gt; 终端能输出的都能重定向输出"></a>&gt; 终端能输出的都能重定向输出</h2><h2 id="管道，有输入有输出"><a href="#管道，有输入有输出" class="headerlink" title="| 管道，有输入有输出"></a>| 管道，有输入有输出</h2><pre><code>指令1|指令2|...|指令n    从指令1的输出作为指令2的输入，一直到指令n输出举例：ls -l|more 查看文件列表并分屏显示</code></pre><h2 id="ln-建立链接"><a href="#ln-建立链接" class="headerlink" title="ln 建立链接"></a>ln 建立链接</h2><ol><li>-s 软连接<ol><li>类似快捷方式</li><li>删除软连接不影响源文件</li><li>软连接显示链接文件大小</li><li>可以链接不存在文件</li><li>可以连接目录</li><li>可以跨系统<br>例子：ln -s 1.txt softlink1.txt    </li></ol></li><li>硬链接    <ol><li>类似多名称</li><li>删除硬链接，若无其他硬链接删除data，若有则无影响</li><li>硬链接显示data大小，多个硬链接实际上只有data实际大小</li><li>不可以链接不存在文件</li><li>不可链接目录</li><li>不可跨系统<br>例子：ln 2.txt hardlink2.txt</li></ol></li></ol><hr><h2 id="grep-文件内容搜索"><a href="#grep-文件内容搜索" class="headerlink" title="grep 文件内容搜索"></a>grep 文件内容搜索</h2><ul><li>grep ‘搜索内容’ 搜索文件路径</li><li>-t 忽略大小写</li><li>-n 显示行号</li><li>-v 取反，不显示搜索内容</li><li>grep 搜索内容可用正则</li></ul><h2 id="find-文件搜索"><a href="#find-文件搜索" class="headerlink" title="find 文件搜索"></a>find 文件搜索</h2><ol><li>名称搜索<ul><li>find ./ 文件名称</li><li>类正则：<br> find ./ ‘*.txt’<br> find ./ ‘sa?asd.txt’</li></ul></li><li>大小搜索<ul><li>find ./ -size +30M                 大于30M</li><li>-30M                 小于30M</li><li>+15M -size -30M     大于15M小于30M</li></ul></li></ol><hr><h2 id="tar-归档文件-和-gz-压缩文件"><a href="#tar-归档文件-和-gz-压缩文件" class="headerlink" title="tar 归档文件 和 gz 压缩文件"></a>tar 归档文件 和 gz 压缩文件</h2><ol><li>归档是确保文件完整性</li><li>压缩是节省空间</li><li>tar &gt; 源文件</li><li>gz 文件<ul><li>可能   &gt; 源文件</li><li>也可能 &lt; 源文件</li></ul></li><li>-c 生成档案文件，创建打包文件</li><li>-v 显示进度</li><li>-f 指定文件名称，必须放最后</li><li>-x 解开打包文件</li><li>-z 解压缩和压缩</li><li>-C 指定要解档目录</li></ol><h3 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作:"></a>常用操作:</h3><pre><code>1.    tar -cvf 归档文件名.tar 待归档文件1...        改变文件大小2.    tar -xvf 归档文件名.tar                        改变文件大小3.    tar -zcvf 压缩文件.tar.gz 待压缩文件1...    改变文件大小4.    tar -zxvf 压缩文件.tar.gz                    改变文件大小5.    tar -zxvf 压缩文件.tar.gz -C 指定目录</code></pre><h2 id="zip-和-unzip"><a href="#zip-和-unzip" class="headerlink" title="zip 和 unzip"></a>zip 和 unzip</h2><ol><li>zip -r a.zip a  压缩a目录成a.zip文件</li><li>unzip a.zip        解压缩文件</li></ol><h2 id="bz2-压缩与解压"><a href="#bz2-压缩与解压" class="headerlink" title="bz2 压缩与解压"></a>bz2 压缩与解压</h2><ol><li>-j 解压和压缩</li><li>tar -jcvf all.atr.bz2 *.txt</li><li>tar -jxvf all.atr.bz2 </li></ol><h2 id="rar和unrar"><a href="#rar和unrar" class="headerlink" title="rar和unrar"></a>rar和unrar</h2><ul><li>类似zip</li></ul><hr><h2 id="文件权限"><a href="#文件权限" class="headerlink" title="文件权限"></a>文件权限</h2><p>ls -l<br>文件类型 文件拥有者u 文件所属组g 其他用户权限o 文件指针数 拥有者 用户所在组<br>rwx-    4210     读，写，执行，无权限<br>所有用户a<br>chmod 权限修改</p><ul><li>-R 递归修改</li><li>chmod u+r 文件名     加权限</li><li>chmod u-r 文件名     减权限</li><li>chmod u=rwx 文件名   设置权限</li><li>chmod 777 文件名   <ul><li>7 rwx</li><li>6 rw-</li><li>5 r-x</li><li>4 r–</li><li>3 -wx</li><li>2 -w-</li><li>1 –x</li><li>0 —</li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linuxbasic1</title>
      <link href="/2019/07/23/linuxbasic1/"/>
      <url>/2019/07/23/linuxbasic1/</url>
      
        <content type="html"><![CDATA[<h1 id="linux入门基本命令"><a href="#linux入门基本命令" class="headerlink" title="linux入门基本命令"></a>linux入门基本命令</h1><ul><li>终端命令格式 command [-option] [parameter]</li><li>command –help 查看命令帮助</li><li>man command  manualpage命令使用手册<br>进入文件后搜索常用: </li><li>/搜索内容 类似window ctrl+F<br>换页常用: </li><li>f 前一页</li><li>b 后一页</li><li>q 退出</li></ul><hr><h2 id="ls-当前文件夹所有文件-类DOC-dir-命令"><a href="#ls-当前文件夹所有文件-类DOC-dir-命令" class="headerlink" title="ls 当前文件夹所有文件(类DOC dir 命令)"></a>ls 当前文件夹所有文件(类DOC dir 命令)</h2><ul><li>-a 显示隐藏 </li><li>-l 显示详细信息 </li><li>-h 显示大小用人理解的单位</li></ul><h2 id="cd-切换目录"><a href="#cd-切换目录" class="headerlink" title="cd 切换目录"></a>cd 切换目录</h2><ul><li>. 当前目录 </li><li>.. 上级目录 </li><li>~ 家目录 </li><li>/ 根目录 </li><li><ul><li>回到上次进入目录</li></ul></li></ul><h2 id="pwd-当前路径"><a href="#pwd-当前路径" class="headerlink" title="pwd 当前路径"></a>pwd 当前路径</h2><h2 id="touch-新建文件-注意文件的扩展名加这个是好习惯，创建复制移动都要注意这点"><a href="#touch-新建文件-注意文件的扩展名加这个是好习惯，创建复制移动都要注意这点" class="headerlink" title="touch 新建文件 注意文件的扩展名加这个是好习惯，创建复制移动都要注意这点"></a>touch 新建文件 注意文件的扩展名加这个是好习惯，创建复制移动都要注意这点</h2><h2 id="mkdir-新建目录"><a href="#mkdir-新建目录" class="headerlink" title="mkdir 新建目录"></a>mkdir 新建目录</h2><ul><li>-p 递归创建</li></ul><h2 id="gedit-编辑文件ubuntu可以打开文本文件，习惯后配置好的vim还是用vim打开文件编辑"><a href="#gedit-编辑文件ubuntu可以打开文本文件，习惯后配置好的vim还是用vim打开文件编辑" class="headerlink" title="gedit 编辑文件ubuntu可以打开文本文件，习惯后配置好的vim还是用vim打开文件编辑"></a>gedit 编辑文件ubuntu可以打开文本文件，习惯后配置好的vim还是用vim打开文件编辑</h2><h2 id="vi-所有linux都可以用的文本编辑器"><a href="#vi-所有linux都可以用的文本编辑器" class="headerlink" title="vi 所有linux都可以用的文本编辑器"></a>vi 所有linux都可以用的文本编辑器</h2><h2 id="rm-删除"><a href="#rm-删除" class="headerlink" title="rm 删除"></a>rm 删除</h2><ul><li>-i 交互式运行 </li><li>-f 强制进行忽略不存在 </li><li>-r 递归删除可删文件夹</li></ul><h2 id="mv-移动文件，重命名"><a href="#mv-移动文件，重命名" class="headerlink" title="mv 移动文件，重命名"></a>mv 移动文件，重命名</h2><ul><li>-i 交互方式 </li><li>-v 显示移动过程 </li><li>-f </li></ul><h2 id="cp-复制文件（DOS-copy）"><a href="#cp-复制文件（DOS-copy）" class="headerlink" title="cp 复制文件（DOS copy）"></a>cp 复制文件（DOS copy）</h2><ul><li>文件备份 sudo cp 路径/文件名.扩展名 路径/文件名.扩展名.bak(2)</li></ul><h2 id="tree-以树状显示路径"><a href="#tree-以树状显示路径" class="headerlink" title="tree 以树状显示路径"></a>tree 以树状显示路径</h2><h2 id="clear-清屏（DOS-cls）ctrl-l"><a href="#clear-清屏（DOS-cls）ctrl-l" class="headerlink" title="clear 清屏（DOS cls）ctrl + l"></a>clear 清屏（DOS cls）ctrl + l</h2><h2 id="which-命令位置"><a href="#which-命令位置" class="headerlink" title="which 命令位置"></a>which 命令位置</h2><h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><ul><li>命令终止 ctrl + c </li><li>ctrl + shift + + 放大</li><li>ctrl + - 缩小</li></ul><h2 id="cal-日期"><a href="#cal-日期" class="headerlink" title="cal 日期"></a>cal 日期</h2><ul><li>-3 显示上月本月下月 </li><li>-j 显示当年第几天 直接写年份</li></ul><h2 id="date-显示日期"><a href="#date-显示日期" class="headerlink" title="date 显示日期"></a>date 显示日期</h2><ul><li><p>格式化显示举例 “+%Y年%m月%d日 %H时%M分%S秒”</p><h2 id="history-显示曾经执行过得指令"><a href="#history-显示曾经执行过得指令" class="headerlink" title="history 显示曾经执行过得指令"></a>history 显示曾经执行过得指令</h2></li><li><p>直接加数字n显示最近执行过得n条指令    </p></li><li><p>!编号执行编号那条指令 </p></li><li><p>家目录下 ls -al 有个.bash_history 文件记录history</p></li></ul><h2 id="cat-文件查看or合并文件内容"><a href="#cat-文件查看or合并文件内容" class="headerlink" title="cat 文件查看or合并文件内容"></a>cat 文件查看or合并文件内容</h2><ul><li>-n 加行号 </li><li>-b 非空行加编号 </li><li>-s 遇到两行以上空行只显示一个</li><li>cat 1.txt 2.txt 连接显示两个文件</li></ul><h2 id="more-分页查看文件内容（举例more-etc-servers）"><a href="#more-分页查看文件内容（举例more-etc-servers）" class="headerlink" title="more 分页查看文件内容（举例more etc/servers）"></a>more 分页查看文件内容（举例more etc/servers）</h2><ul><li>+num 从num行显示文件</li><li>fb 翻页ctrl +f ctrl + v</li><li>q 退出</li><li>more 1.TXT 2.txt 也可以连接文件但是效果不一样</li><li>-p 清屏查看</li><li>-s 连续两个空行只显示一行</li><li>回车查看一行</li><li>空格查看一列</li></ul><hr><h1 id="linux-入门基本路径介绍"><a href="#linux-入门基本路径介绍" class="headerlink" title="linux 入门基本路径介绍"></a>linux 入门基本路径介绍</h1><p>/ 表示根目录<br>~ 根目录<br>~/user 根目录下用户目录<br>/bin 可执行的二进制文件<br>/etc 存配置文件<br>/root root权限目录<br>/boot 启动使用文件 /boot/grub 系统引导<br>/dev 设备文件 u盘挂载 mount /dev/U盘名称 /mnt<br>/lib 系统使用的函数库目录，程序执行过程中需要调用的一些额外的函数库<br>/mnt 默认挂载点<br>/opt 额外安装软件目录<br>/sbin 给root用户使用的可执行二进制文件<br>/tmp 程序执行的临时文件<br>/srv 服务启动后的需要访问的数据目录<br>/usr UNIX system resource应用程序的存放目录 /usr/bin /usr/lib /usr/local/lib<br>/var /var/log 日志文件 /var/run 存放运行程序PID</p>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>abouthexodeploy</title>
      <link href="/2019/07/22/abouthexodeploy/"/>
      <url>/2019/07/22/abouthexodeploy/</url>
      
        <content type="html"><![CDATA[<h2 id="更换主题后修改作者"><a href="#更换主题后修改作者" class="headerlink" title="更换主题后修改作者"></a>更换主题后修改作者</h2><p>出现问题描述：localhost:4000 端口正常显示但是部署到github上public文件夹内容未改变。</p><h2 id="hexo-deploy-标准流程"><a href="#hexo-deploy-标准流程" class="headerlink" title="hexo deploy 标准流程"></a>hexo deploy 标准流程</h2><ol><li>进入blog目录</li><li>sudo su root权限</li><li>修改blog的内容</li><li>hexo clean(还不了解具体作用只是看视频中这样做）</li><li>hexo g（生成静态文件？视频中说hexo生成的是静态页面，具体意思未知，有待学习）</li><li>ctrl+D退出root权限</li><li>sudo hexo d 进行部署，讲博客部署到github上的lmfalcon.github.io（具体网址不是这个，而是新建仓库时的那个链接）上。</li></ol><h2 id="问题解决过程"><a href="#问题解决过程" class="headerlink" title="问题解决过程"></a>问题解决过程</h2><p>root权限可以少打sudo命令本来很方便，但是建立ssh时我用的是lmfalcon这个用户导致git部署到github上时需要用lmfalcon这个用户。所以需要标准流程中的第6步退出过程，否者部署显示成功但是实际未部署任何文件。</p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>template</title>
      <link href="/2019/07/17/template2/"/>
      <url>/2019/07/17/template2/</url>
      
        <content type="html"><![CDATA[<h2 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h2><p>内容<br>注意以上要在root权限下进行（sudo su ,ctrl+D退出root）<br>hexo v            版本<br>hexo init        初始化模板<br>hexo new 文章名    新建文章，一般存储在blog/source/_post目录下<br>hexo clean        清理<br>hexo g            生成新文章<br>hexo s            生成blog在本地localhost:4000</p><hr><h2 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a>第二章</h2><p>内容<br>这次因为修改了md文件导致hexo g 时无法更新，问题出在：</p><ol><li>mv 重命名注意不要遗漏扩展名，否则改变文件格式</li><li>修改文章标题只用修改title，与文件名无关</li></ol><hr><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p>百度</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/07/16/hello-world/"/>
      <url>/2019/07/16/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
